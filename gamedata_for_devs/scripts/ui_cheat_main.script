--[[-----------------------------------------------------------------------------------------------
 File              : ui_cheat_main.script
 Description       : Универсальное спавн-меню (ТЧ, ЧН, ЗП)
 Created           : 02.11.2014
 Last update       : 17.05.2015
 Copyright         : naxac
--]]-----------------------------------------------------------------------------------------------

ini_file.r_float_ex = function (ini, section, line, def)
	if ini:section_exist(section) and ini:line_exist(section, line) then
		return ini:r_float(section, line)
	end
	return def
end
ini_file.r_string_ex = function (ini, section, line, def)
	if ini:section_exist(section) and ini:line_exist(section, line) then
		return ini:r_string(section, line)
	end
	return def
end
ini_file.r_u32_ex = function (ini, section, line, def)
	if ini:section_exist(section) and ini:line_exist(section, line) then
		return ini:r_u32(section, line)
	end
	return def
end



---*************************************************************************************
local classes = {
	weapons = {
		[clsid.wpn_ak74]                = true,
		[clsid.wpn_ak74_s]              = true,
		[clsid.wpn_binocular]           = true,
		[clsid.wpn_binocular_s]         = true,
		[clsid.wpn_bm16]                = true,
		[clsid.wpn_bm16_s]              = true,
		[clsid.wpn_fn2000]              = true,
		[clsid.wpn_fort]                = true,
		[clsid.wpn_groza]               = true,
		[clsid.wpn_groza_s]             = true,
		[clsid.wpn_hpsa]                = true,
		[clsid.wpn_hpsa_s]              = true,
		[clsid.wpn_knife]               = true,
		[clsid.wpn_knife_s]             = true,
		[clsid.wpn_lr300]               = true,
		[clsid.wpn_lr300_s]             = true,
		[clsid.wpn_pm]                  = true,
		[clsid.wpn_pm_s]                = true,
		[clsid.wpn_rg6]                 = true,
		[clsid.wpn_rg6_s]               = true,
		[clsid.wpn_rpg7]                = true,
		[clsid.wpn_rpg7_s]              = true,
		[clsid.wpn_shotgun]             = true,
		[clsid.wpn_shotgun_s]           = true,
		[clsid.wpn_svd]                 = true,
		[clsid.wpn_svd_s]               = true,
		[clsid.wpn_svu]                 = true,
		[clsid.wpn_svu_s]               = true,
		[clsid.wpn_usp45]               = true,
		[clsid.wpn_usp45_s]             = true,
		[clsid.wpn_val]                 = true,
		[clsid.wpn_val_s]               = true,
		[clsid.wpn_vintorez]            = true,
		[clsid.wpn_vintorez_s]          = true,
		--[clsid.wpn_walther]             = true,
		--[clsid.wpn_walther_s]           = true
	},
	addons = {
		[clsid.wpn_grenade_launcher]    = true,
		[clsid.wpn_scope]               = true,
		[clsid.wpn_scope_s]             = true,
		[clsid.wpn_silencer]            = true
	},
	ammo = {
		[clsid.wpn_ammo]                = true,
		[clsid.wpn_ammo_m209]           = true,
		[clsid.wpn_ammo_og7b]           = true,
		[clsid.wpn_ammo_vog25]          = true,
		[clsid.wpn_grenade_f1]          = true,
		[clsid.wpn_grenade_fake]        = true,
		[clsid.wpn_grenade_rgd5]        = true,
		[clsid.wpn_grenade_rpg7]        = true
	},
	outfits = {
		[clsid.equ_exo]                 = true,
		[clsid.equ_military]            = true,
		[clsid.equ_scientific]          = true,
		[clsid.equ_stalker]             = true,
		[clsid.equ_stalker_s]           = true
	},
	artefacts = {
		[clsid.artefact]                = true,
		[clsid.artefact_s]              = true,
		[clsid.art_bast_artefact]       = true,
		[clsid.art_black_drops]         = true,
		[clsid.art_dummy]               = true,
		[clsid.art_electric_ball]       = true,
		[clsid.art_faded_ball]          = true,
		[clsid.art_galantine]           = true,
		[clsid.art_gravi]               = true,
		[clsid.art_gravi_black]         = true,
		[clsid.art_mercury_ball]        = true,
		[clsid.art_needles]             = true,
		[clsid.art_rusty_hair]          = true,
		[clsid.art_thorn]               = true,
		[clsid.art_zuda]                = true
	},
	mobs = {
		[clsid.bloodsucker] 			= true,
		[clsid.boar] 					= true,
		[clsid.dog_red] 				= true,
		[clsid.dog_black] 				= true,
		[clsid.flesh] 					= true,
		[clsid.burer] 					= true,
		[clsid.cat] 					= true,
		[clsid.chimera] 				= true,
		[clsid.controller] 				= true,
		[clsid.fracture] 				= true,
		[clsid.poltergeist] 			= true,
		[clsid.zombie] 					= true,
		[clsid.snork] 					= true,
		[clsid.tushkano] 				= true,
		[clsid.psy_dog] 				= true,
		[clsid.psy_dog_phantom] 		= true,	
		[clsid.pseudo_gigant] 			= true,	
		[clsid.bloodsucker_s] 			= true,
		[clsid.boar_s] 					= true,
		[clsid.dog_s] 					= true,
		[clsid.flesh_s] 				= true,
		[clsid.pseudodog_s] 			= true,
		[clsid.burer_s] 				= true,
		[clsid.cat_s] 					= true,
		[clsid.chimera_s] 				= true,
		[clsid.controller_s] 			= true,
		[clsid.fracture_s] 				= true,
		[clsid.poltergeist_s] 			= true,
		[clsid.gigant_s] 				= true,
		[clsid.zombie_s] 				= true,
		[clsid.snork_s] 				= true,
		[clsid.tushkano_s] 				= true,
		[clsid.psy_dog_s] 				= true,
		[clsid.psy_dog_phantom_s] 		= true
	},
	npc = {
		[clsid.script_stalker]			= true
	},
	anomalies = {
		[clsid.zone_acid_fog] = true,
		[clsid.zone_bfuzz] = true,
		[clsid.zone_bfuzz_s] = true,
		[clsid.zone_dead] = true,
		[clsid.zone_galant_s] = true,
		[clsid.zone_galantine] = true,
		[clsid.zone_mbald_s] = true,
		[clsid.zone_mincer] = true,
		[clsid.zone_mincer_s] = true,
		[clsid.zone_mosquito_bald] = true,
		[clsid.ameba_zone] = true,
		[clsid.zone_rusty_hair] = true,
		[clsid.torrid_zone] = true,
		[clsid.zone_radioactive] = true
	},
	items = {},
	quest_items = {},
	others = {}
}
-- В эту таблицу внести новые классы, если они добавлены в мод (см. скрипт class_registrator)
local new_clsids = {
	cars = {'car_s'},
}


local function get_class(section, line, def)
	if sys_ini:section_exist(section) and sys_ini:line_exist(section, line) then
		return sys_ini:r_clsid(section, line)
	end
	return def
end

local sections = {}

-- Записываем найденные секции в таблицу по группам
local function check_section(sect)
	local cls = get_class(sect, "class")
	if cls then
		if sys_ini:line_exist(sect, "inv_name")
			and sys_ini:line_exist(sect, "visual")
			and sys_ini:line_exist(sect, "description") then	-- inventory item
			
			if  get_bool(sect, "can_take", true) == false	-- can't take it
				or sect:find("^mp_") then -- from multiplayer
				return false
			end
			
			-- quest items
			if get_bool(sect, "quest_item", false) == true then
				table.insert(sections.quest_items, sect)
				return true
			end
			-- from table 'classes'
			for k,v in pairs(classes) do
				if v[cls] then
					table.insert(sections[k], sect)
					return true
				end
			end
			-- other items
			table.insert(sections.items, sect)
			return true
		elseif classes.mobs[cls] then		-- monster
			table.insert(sections.mobs, sect)
			return true
		elseif classes.npc[cls] then	-- stalker
			table.insert(sections.npc, sect)
			return true
		elseif classes.anomalies[cls] then	-- anomaly
			table.insert(sections.anomalies, sect)
			return true
		elseif classes.cars[cls] then		-- car
			table.insert(sections.cars, sect)
			return true
		else								-- other obect
			table.insert(sections.others, sect)
			return true
		end
	end
	return false
end


function collect_sections_main()
	-- добавим в таблицу новые классы, если они есть
	for k,t in pairs(new_clsids) do
		for _,v in ipairs(t) do
			if clsid[v] then
				if classes[k] == nil then classes[k] = {} end
				classes[k][clsid[v]] = true
			end
		end
	end

	for k in pairs(classes) do
		sections[k] = {}
	end

	sys_ini:iterate_sections( check_section )

	return sections
end
---*************************************************************************************


cheat_list = false
gameIsOn = false

function start_menu(self)
	gameIsOn = (level.present() and db.actor and db.actor:alive())
	if not cheat_list then
		cheat_list = {}
		local tmp = collect_sections_main()
		local t
		for k,v in pairs(tmp) do
			cheat_list[k] = {}
			t = cheat_list[k]
			for i,s in pairs(v) do
                local inv_name = game.translate_string(sys_ini:r_string_ex(s, "inv_name"))
                table.insert(t,
				{
					section = s,
					name = inv_name or s
				})
			end
			table.sort(t, sort_main)
		end
	end

	if self.spawn_dlg == nil then
		self.spawn_dlg = ui_cheat_soc.cheat_menu()
		self.spawn_dlg.owner = self
	end

	self:GetHolder():start_stop_menu(self.spawn_dlg, true)
	self:Show(false)
end

-- Сортируем предметы по алфавиту: чтоб было проще искать нужное
-- Сортируем предметы по алфавиту: чтоб было проще искать нужное
function sort_main(s1,s2)
	local sname = sort_by_name(s1.name, s2.name)
	if sname ~= nil then return sname end
	return sort_by_section(s1.section, s2.section)
end

function sort_by_name(n1, n2)
	n1 = string.lower(n1)
	n2 = string.lower(n2)
	local cnt = math.min(#n1, #n2)
	local l1, l2
	for a=1,cnt do
		l1 = n1:sub(a,a):byte()
		l2 = n2:sub(a,a):byte()
		if l1~=l2 then return l1<l2 end
	end
	return nil
end

function sort_by_section(s1, s2)
	local cnt = math.min(#s1, #s2)
	local l1, l2
	for a=1,cnt do
		l1 = s1:sub(a,a):byte()
		l2 = s2:sub(a,a):byte()
		if l1~=l2 then return l1<l2 end
	end
	return #s1<#s2
end

function give_item_icon(section)
	local t = {}
	t.width = sys_ini:r_u32_ex(section, "inv_grid_width", 1) *50
	t.height = sys_ini:r_u32_ex(section, "inv_grid_height", 1) *50
	t.x = sys_ini:r_u32_ex(section, "inv_grid_x", 8) *50
	t.y = sys_ini:r_u32_ex(section, "inv_grid_y", 13) *50
	return t
end

function give_monster_icon(section)
	local t = {}
	local texture = sys_ini:r_string_ex(section, "icon", "ui_npc_monster_mutant_boar")

	local tex_info = GetTextureInfo(texture, texture)
	local rect = tex_info:get_rect()
	t.x = rect.x1
	t.y = rect.y1
	t.width = rect.x2 - rect.x1
	t.height = rect.y2 - rect.y1
	return t, tex_info:get_file_name()
end

function spawn_item(section, num)
	if not section then return end
	if gameIsOn then
		if num==nil then num = 1 end
		for i=1,num do
			alife():create(section,vector(),0,0,0)
		end
		local snd = sound_object([[detectors\contact_1]])
		snd:play(db.actor, 0, sound_object.s2d)
	end
end

function spawn_npc(section, num)
	if not section then return end
	if gameIsOn then
		if num==nil then num = 1 end
		local act = db.actor
		for i=1,num do
			alife():create(section, act:position():add(act:direction():mul(4)), act:level_vertex_id(), act:game_vertex_id())
		end
		local snd = sound_object([[detectors\contact_1]])
		snd:play(act, 0, sound_object.s2d)
	end
end
