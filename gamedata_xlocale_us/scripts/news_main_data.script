-- -*- mode: lua; coding: windows-1251-dos -*-

--/ news_main_data.script /--
--/ OGS Evolution - team /--
--/ ver. 2.0 /--
--/ Использовались некоторые наработки АМК /--
--/ Отдельное спасибо DEXXX-у /--

--/ Основная и вспомогательные функции для новостей /--


local random_news = sys_ini:r_s32("options","random_news")
local t_koef_glob = sys_ini:r_s32("options","random_news_delta") -- глобальный изменяемый коэффициент изменения диапазона времени выдачи сообщений
local news_showtime = sys_ini:r_s32("options","news_showtime") -- стандартное время показа сообщения

local prob1 = news_main_new.show_news_trade
local prob2 = news_main_new.show_news_another
local prob3 = news_main_new.show_news_dolg
local prob4 = news_main_new.show_news_freedom
local prob5 = news_main_new.on_daytime
local prob6 = news_main_new.show_news_horror
local prob7 = news_main_new.show_PDA_error
local prob8 = news_main_new.semetskjy_death
local prob9 = news_main_new.show_news_vibros
local prob10 = news_main_new.show_news_error
local prob11 = news_main_new.vubros_msg_fake
local prob12 = news_main_new.net_dialogs


local meter_time = time_global()

local t_koef_blow = 0.2 -- коэффициент изменения диапазона времени выдачи сообщений при начале Выброса
local t_koef_horr = 1.3 -- коэффициент изменения диапазона времени выдачи сообщений во Время Ужаса

local ft={}

--Главная функция

function show_news_main()
	if isIndoor(level.name()) or chk_Vibros() or ogse.var_exists("need_shutdown_stalker_news") then return end
	local t_duwn = 60000 -- стандартный диапазон времени выдачи сообщений
	local t_up = 180000
	if has_alife_info("pre_blowout") then
		t_duwn = t_duwn*t_koef_glob*t_koef_blow -- диапазон времени выдачи сообщений при начале Выброса
		t_up = t_up*t_koef_glob*t_koef_blow
	end
	local uptime = time_global()
	local meter = meter_time + math.random(t_duwn, t_up)
	if uptime < meter then return end
	meter_time = time_global()
	
	if has_alife_info("pre_blowout2") and not has_alife_info("blowout") then
		ft = { 
		prob9,
		prob10
		}
	elseif (has_alife_info("pre_blowout") and not has_alife_info("pre_blowout2")) or (has_alife_info("blowout")) then
		ft = { 
		prob7,
		prob10
		}
	elseif ogse_surge_mgr.actor_in_hideout then
		ft = { 
		prob1,
		prob7,
		prob2,
		prob7,
		prob3,
		prob7,
		prob4,
		prob7,
		prob5,
		prob7,
		prob8,
		prob7,
		prob11,
		prob7,
		prob12,
		prob7
		}
	else
		ft = { 
		prob1,
		prob2,
		prob3,
		prob4,
		prob5,
		prob8,
		prob11,
		prob12
		}
	end
	ft[math.random(table.getn(ft))]()
end

--"Статус соединения:"
local connect_templates = {
"Link is restored.",
"Signal is restored.",
"Connecting to network...",
"Connecting to server..."
}

local disconnect_templates = {
"Server is unavailable.",
"No network.",
"Network signal is lost, disconnecting.",                  
"Signal is lost."
}

--Вспомагательные функции

function on_connect() 
if random_news == 1 then
     if not chk_Vibros() then 
          local con_templ = connect_templates[math.random(table.getn(connect_templates))] 
             if con_templ ~= nil then 
               db.actor:give_game_news("%c[255,0,255,0]PDA\\n%c[default]" .. con_templ, "ui\\ui_iconsTotal", Frect():set(498,235,83,47), 0, 5000) 
          end
     end 
end
end

function on_connect_vbs() 
     if not isIndoor(level.name()) then 
          local con_templ = connect_templates[math.random(table.getn(connect_templates))] 
             if con_templ ~= nil then 
               db.actor:give_game_news("%c[255,0,255,0]PDA\\n%c[default]" .. con_templ, "ui\\ui_iconsTotal", Frect():set(498,235,83,47), 0, 5000) 
          end
     end
end

function on_disconnect() 
if random_news == 1 then
     if not chk_Vibros() then 
      local discon_templ = disconnect_templates[math.random(table.getn(disconnect_templates))] 
             if discon_templ ~= nil then 
      db.actor:give_game_news("%c[255,255,0,0]PDA\\n%c[default]" .. discon_templ, "ui\\ui_iconsTotal", Frect():set(498,235,83,47), 0, 5000) 
          end
     end 
end
end

function on_disconnect_vbs() 
if random_news == 1 then
     if not isIndoor(level.name()) then 
      local discon_templ = disconnect_templates[math.random(table.getn(disconnect_templates))] 
             if discon_templ ~= nil then 
      db.actor:give_game_news("%c[255,255,0,0]PDA\\n%c[default]" .. discon_templ, "ui\\ui_iconsTotal", Frect():set(498,235,83,47), 0, 5000) 
          end
     end 
end
end
 
function chk_Vibros()
	return has_alife_info("no_net_signal")
end

function message_filter()
local level_name = level.name()
if db.actor ~= nil and level_name ~= nil then
	if not isIndoor(level_name) then
		on_connect()
	else
		on_disconnect()
	end
end 
end


function game_minutes()
	local gtime = level.get_time_days()*60*24+level.get_time_hours()*60+level.get_time_minutes()  --время в игровых минутах	
return gtime
end
