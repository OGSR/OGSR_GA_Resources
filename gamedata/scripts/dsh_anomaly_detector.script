-- https://github.com/dsh2dsh/op2ogse/blob/master/gamedata/scripts/dsh/dsh_anomaly_detector.script
-- Модуль обхода аномалий сталкерами. Для монстров включать его смысла не вижу.

local ENABLE_AD = true --Включить скрипт?

local excluded_npc = {
  [ "dik_the_drifter" ] = true,
}

local excluded_comms = {
  [ "zombied" ] = true,
}

local excluded_locations = {
}


function attach( sm )
  sm:subscribe({ signal = "on_after_blowout",   fun = this.on_after_blowout })
  sm:subscribe({ signal = "on_npc_spawn",       fun = this.on_npc_spawn     })
  sm:subscribe({ signal = "on_npc_death",       fun = this.on_death         })
  sm:subscribe({ signal = "on_npc_net_destroy", fun = this.on_death         })
end


local mobs = {}

function on_npc_spawn( obj, binder )
  if not obj:alive() then return end

  local anomaly_detector = obj:get_custom_monster():anomaly_detector()
  if ( excluded_npc[ obj:profile_name() ]
      or excluded_npc[ obj:name() ]
      or excluded_npc[ obj:story_id() ]
      or excluded_comms[ obj:character_community() ]
      or excluded_locations[ level.name() ]
    )
	and not xr_companion.is_companion( obj:id() )
  then
    anomaly_detector:deactivate( true )
    return
  end

  if
    --[=[( not obj:is_relation_enemy( db.actor ) and not get_anomaly_invisibility( obj ) )
    or--]=] (
      obj:character_community() == "kulg_band_2"
      or obj:character_community() == "ecolog"
      or obj:story_id() == story_ids.colonel_prohorov
      or obj:character_community():find("bratstvo_")
    ) --Simp: квестовая хрень, нормально фиксить лень.
  then
    --log3("--[%s] set_anomaly_invisibility for [%s] comm: [%s]", script_name(), obj:name(), obj:character_community())
    set_anomaly_invisibility( obj, true )
    binder[ script_name()..".anomaly_invisibility" ] = true
  end

  if not ENABLE_AD then return end
  --
  anomaly_detector.Anomaly_Detect_Radius = 30
  --
  anomaly_detector:activate( true )
  mobs[ obj:id() ] = true
end


function on_death( obj )
  local binder = obj:binded_object()
  if binder[ script_name()..".anomaly_invisibility" ] then
    set_anomaly_invisibility( obj, false )
    binder[ script_name()..".anomaly_invisibility" ] = nil
  end
  if mobs[ obj:id() ] then
    local anomaly_detector = obj:get_custom_monster():anomaly_detector()
    anomaly_detector:deactivate( true )
    anomaly_detector:remove_all_restrictions()
    mobs[ obj:id() ] = nil
  end
end


function remove_restriction( anomid )
  for id, _ in pairs( mobs ) do
    local obj = level.object_by_id( id )
    if obj then
      local anomaly_detector = obj:get_custom_monster():anomaly_detector()
      anomaly_detector:remove_restriction( anomid )
    end
  end
end


function pre_blow_off()
  for id, _ in pairs( mobs ) do
    local obj = level.object_by_id( id )
    if obj then
      local anomaly_detector = obj:get_custom_monster():anomaly_detector()
      anomaly_detector:deactivate( true )
      anomaly_detector:remove_all_restrictions()
    end
  end
end


function on_after_blowout()
  for id, _ in pairs( mobs ) do
    local obj = level.object_by_id( id )
    if obj then
      local anomaly_detector = obj:get_custom_monster():anomaly_detector()
      anomaly_detector:activate( true )
    end
  end
end


function get_freq() return 1000 end
