

local colors = {
  { -- health
    { 255, 255,   0,   0 },
    { 229, 255,  51,  51 },
    { 204, 255, 102,  51 },
    { 178, 255, 204,  51 },
    { 153, 255, 255,  51 },
    { 127, 204, 255,  51 },
    { 102, 102, 255,  51 },
    --{  76,  51, 255, 102 },
    --{  51,  51, 255, 204 },
    --{  25,  51, 204, 204 },
  },
  { -- radiation
    { 255, 255,   0,   0 },
    { 248, 255, 255,  20 },
    { 235, 255, 255,  40 },
    { 229, 255, 255,  55 },
    { 204, 255, 255,  70 },
    { 178, 255, 255,  85 },
    { 153, 255, 255, 100 },
    --{ 127, 255, 255, 115 },
    --{ 102, 255, 255, 140 },
    --{  51, 255, 255, 155 },
  },
  { -- wound
    { 255, 255,   0,   0 },
    { 248, 255,   0,  20 },
    { 235, 255,  20,  20 },
    { 229, 255,  40,  40 },
    { 204, 255,  60,  60 },
    { 178, 255,  80,  80 },
    { 153, 255, 100, 100 },
    --{ 127, 255, 120, 120 },
    --{ 102, 255, 140, 140 },
    --{  51, 255, 153, 153 },
  },
  { -- satiety
    { 255, 255,   0,   0 },
    { 229, 255,  51,  51 },
    { 204, 255, 102,  51 },
    { 178, 255, 204,  51 },
    { 153, 255, 255,  51 },
    { 127, 204, 255,  51 },
    { 102, 102, 255,  51 },
    --{  76,  51, 255, 102 },
    --{  51,  51, 255, 204 },
    --{  25,  51, 204, 204 },
  },
  { -- psy_health
    { 255,   0,   0, 255 },
    { 248,   0,  25, 255 },
    { 235,   0,  51, 255 },
    { 229,   0,  77, 255 },
    { 204,   0, 102, 255 },
    { 178,   0, 127, 255 },
    { 153,   0, 153, 255 },
    --{ 127,   0, 178, 255 },
    --{ 102,   0, 204, 255 },
    --{  51,   0, 255, 255 },
  },
  { -- power
    { 240, 250, 250, 250 },
    { 240, 180, 180, 180 },
    { 190, 153, 153, 153 },
    { 178, 153, 153, 153 },
    { 153, 153, 153, 153 },
    { 127, 153, 153, 153 },
    { 102, 153, 153, 153 },
    {  76, 153, 153, 153 },
    {  51, 153, 153, 153 },
    {  25, 153, 153, 153 },
  },
  {   -- thirst
    { 255, 255,   0,   0 },
    { 229, 255,  51,  51 },
    { 204, 255, 102,  51 },
    { 178, 255, 204,  51 },
    { 153, 255, 255,  51 },
    { 127, 204, 255,  51 },
    { 102, 102, 255,  51 },
    --{  76,  51, 255, 102 },
    --{  51,  51, 255, 204 },
    --{  25,  51, 204, 204 },
  },  
}


local icons = {
  [ "weapon_jammed" ] = 1,
  [ "radiation"     ] = 2,
  [ "wound"         ] = 3,
  [ "satiety"       ] = 4,
  [ "psy_health"    ] = 5,
  [ "power"         ] = 6, -- invincible_static
  [ "thirst"        ] = 7,
}

-- частота обновления иконок
local refresh_freq = 500

local flashing = {}


local function hide_icon( n )
  setup_game_icon( n, 0, 0, 0 )
  if flashing[ n ] then
    flashing[ n ]:stop()
    flashing[ n ] = nil
  end
end

local function set_icon_color( n, value )
  if value < 0 then value = 0 end
  local idx   = math.floor( value * #colors[n] ) + 1
  local color = colors[ n ][ idx ]
  setup_game_icon( n, GetARGB( unpack( color ) ), 0, 0 )
  if idx == 1 then
    if not flashing[ n ] then
      local flash = true
      flashing[ n ] = dsh.exec_periodic(
        refresh_freq,
        function()
          if flash then
            setup_game_icon( n, GetARGB( unpack( color ) ), 0, 0 )
            flash = false
          else
            setup_game_icon( n, GetARGB( 51, color[ 2 ], color[ 3 ], color[ 4 ] ), 0, 0 )
            flash = true
          end
        end
      )
    end
  else
    if flashing[ n ] then
      flashing[ n ]:stop()
      flashing[ n ] = nil
    end
  end
end


local light_hunger_limit = get_float( "actor_condition", "satiety_light_limit" )
local light_thirst_limit = get_float( "actor_condition", "thirst_light_limit" )


local function update_icons()

  local wpn = db.actor:active_item()
  if wpn and wpn:is_weapon_magazined() and wpn:condition() < 0.95 then
    set_icon_color( icons.weapon_jammed, wpn:condition() / 0.95 )
  else
    hide_icon( icons.weapon_jammed )
  end

  if db.actor.psy_health < 0.95 then
    set_icon_color( icons.psy_health, db.actor.psy_health / 0.95 )
  else
    hide_icon( icons.psy_health )
  end

  if db.actor.satiety < light_hunger_limit then
    set_icon_color( icons.satiety, db.actor.satiety / light_hunger_limit )
  else
    hide_icon( icons.satiety )
  end
  
  if db.actor.thirst < light_thirst_limit then
    set_icon_color( icons.thirst, db.actor.thirst / light_thirst_limit )
  else
    hide_icon( icons.thirst )
  end  

--[=[
  if db.actor.power < 0.8 then
    set_icon_color( icons.power, db.actor.power / 0.8 )
  else
    hide_icon( icons.power )
  end
--]=]
  if not get_console():get_bool("g_god") then hide_icon( icons.power ) end --фикс глюка при выкл годмода

  if db.actor:get_bleeding() > 0.05 then
    set_icon_color( icons.wound, 1 - ( db.actor:get_bleeding() / 5 ) )
  else
    hide_icon( icons.wound )
  end

  local rad = db.actor.radiation
  if rad > 0.02 and db.actor:item_in_slot(8) then
    set_icon_color( icons.radiation, 1 - rad )
  else
    hide_icon( icons.radiation )
  end
end


function attach( sm )
  sm:subscribe({ signal = "on_update", fun = function()
    sm:reschedule( refresh_freq )
    update_icons()
  end })
end