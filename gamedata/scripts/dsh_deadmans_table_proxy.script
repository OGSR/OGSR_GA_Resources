-- -*- mode: lua; coding: windows-1251-dos -*-


function attach(sm)
  sm:subscribe({ signal = "on_load", fun = this.on_load })
  sm:subscribe({ signal = "on_save", fun = this.on_save })
  sm:subscribe({ signal = "on_npc_death", fun = this.on_npc_death })
end

function on_npc_death(victim, who)
	ogse.deadmans_table[victim:id()] = tostring(game.time()).."_"..tostring(who:id())
	run_deadmans_timer()
end

function on_load()
  ogse.deadmans_table = ogse.load_var( "ogse.deadmans_table", {}, "table" )
  run_deadmans_timer()
end

function on_save()
  ogse.save_var( "ogse.deadmans_table", ogse.deadmans_table, "table" )
end

function on_update()
  -- зачистка таблички сохраненных трупиков
  for k, v in pairs( ogse.deadmans_table ) do
    local time_died, killer = 1, 1
    local a = 0
    for word in string.gmatch( v, "%d+" ) do
      if a == 0 then
        time_died = tonumber( word )
      else
        killer = tonumber( word )
      end
      a = a + 1
    end
    local sobj = alife():object( k )
    if not sobj then
      ogse.deadmans_table[ k ] = nil
    else
      sobj = alife():object( killer )
      if not sobj then
        ogse.deadmans_table[ k ] = nil
      else
        if time_died + ( 30 * 60 * 1000 ) <= game.time() then
          ogse.deadmans_table[ k ] = nil
        end
      end
    end
  end
end


local deadmans_t
function run_deadmans_timer()
  if not deadmans_t then
    deadmans_t = check_deadmans_timer():start( true )
  end
end

class "check_deadmans_timer" ( ogse_qt.quick_timer )
function check_deadmans_timer:__init() super()
end

function check_deadmans_timer:condition()
  return next(ogse.deadmans_table) == nil
end

function check_deadmans_timer:action()
  deadmans_t = nil
end

function check_deadmans_timer:update()
  ogse_signals.get_mgr():reschedule( math.random( 10000, 12000 ) )
  on_update()
end
