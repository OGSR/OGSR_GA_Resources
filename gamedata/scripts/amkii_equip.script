-- -*- mode: lua; coding: windows-1251-dos -*-

--[=[
Developed by AMK-Team 
File:  amkII_equip.script
Copyright:  ©  AMK-Team 2009
Author: Refresh
Opimized for OGSE 0.6.9.3 by KamikaZze

Известные проблемы (Когда-нибудь надо их исправить):
	Can't find visual groups for ['stalker_neytral']
--]=]

function attach( sm )
	sm:subscribe({ signal = "on_npc_spawn", fun = this.on_npc_spawn })
	sm:subscribe({ signal = "on_npc_death", fun = this.on_death     })
end

local excluded_npcs = {
	["bar_barman"] = true,
	["bar_arena_manager"] = true,
	["bar_dolg_leader"] = true,
	["bar_dolg_petrenko"] = true,
	["bar_freedom_attacker_commander"] = true,
	["escape_trader"] = true,
	["mil_freedom_member0012"] = true,
	["mil_freedom_member0021"] = true,
	["sidr_guard"] = true,
	["esc_wolf"] = true,
	["esc_fanat"] = true,
	["esc_fox"] = true,
	["esc_provodnik"] = true,
	["gar_seriy"] = true,
	["gar_hellcar"] = true,
	["agr_krot"] = true,
	["bar_dolg_guard_commander"] = true,
	["mil_Svoboda_leader"] = true,
	["val_bandit_borov"] = true,
	["military_trader"] = true,
	["bandit_trader"] = true,
	["monolit_trader"] = true,
	["merc_trader"] = true,
	["pri_trader"] = true,
	["pri_trader_profile"] = true,
	["yantar_ecolog_general"] = true,
	["esc_guns_remontnik"] = true,
	["yan_zombied_chuk"] = true,
}

function can_refit( oNpc )
  if
    not oNpc
	or not oNpc:alive()
    or excluded_npcs[ oNpc:name() ]
    or excluded_npcs[ oNpc:section() ]
    or excluded_npcs[ oNpc:profile_name() ]
    or ( ogse.is_quest_npc( oNpc ) and not xr_companion.is_companion(oNpc:id()) )
  then
    return false
  end
  return true
end


function on_npc_spawn( obj, binder )
  if not can_refit( obj ) then return end
  local s = {
    [ "signal" ] = "on_npc_update." .. obj:id(),
    [ "fun"    ] = this.on_update,
    [ "queued" ] = true,
  }
  binder[ script_name() .. ".subscribed" ] = s
  ogse_signals.get_mgr():subscribe( s )
end


function on_death( obj )
  local binder     = obj:binded_object()
  local subscribed = binder[ script_name() .. ".subscribed" ]
  if subscribed then
    ogse_signals.get_mgr():unsubscribe( subscribed )
    binder[ script_name() .. ".subscribed" ] = nil
  end
end


function on_update( obj )
  ogse_signals.get_mgr():reschedule( math.random( 10000, 30000 ) )
  PeriodicalUpdate( obj )
end


local aOutfitsList = { --[Секция костюма] = Ключ для таблицы aVisualList, в которой находятся группы визуалов
	-- novice
	["novice_outfit"] 						= "novice",
	["outfit_novice_m1"] 					= "novice",
	["novice_outfit_exo1"] 					= "exo",
	["novice_outfit_exo2"] 					= "exo",
	["novice_outfit_m1_exo1"] 				= "exo",
	["novice_outfit_m1_exo2"] 				= "exo",

	-- bandit
	["outfit_bandit_m1"] 					= "bandit",
	["outfit_bandit_m1_exo1"] 				= "exo",
	["outfit_bandit_m1_exo2"] 				= "exo",
	["bandit_plash"] 						= "bandit_pl",
	["bandit_plash_m1"] 					= "bandit_pl",

	-- stalker
	["stalker_outfit"] 						= "stalker",
	["outfit_stalker_m1"] 					= "stalker",
	["outfit_stalker_m2"] 					= "stalker",
	["stalker_outfit_exo1"]					= "exo",
	["stalker_outfit_exo2"]					= "exo",
	["outfit_stalker_m1_exo1"]				= "exo",
	["outfit_stalker_m1_exo2"]				= "exo",
	["stalker_outfit_m2_exo1"]				= "exo",
	["stalker_outfit_m2_exo2"]				= "exo",

	-- dolg
	["dolg_outfit"] 						= "dolg",
	["outfit_dolg_m1"] 						= "dolg",
	["dolg_outfit_exo1"]					= "exo",
	["dolg_outfit_exo2"]					= "exo",
	["outfit_dolg_m1_exo1"]					= "exo",
	["outfit_dolg_m1_exo2"]					= "exo",

	-- freedom
	["svoboda_heavy_outfit"] 				= "svoboda",
	["outfit_svoboda_m1"] 					= "svoboda",
	["svoboda_light_outfit"] 				= "svoboda",
	["svoboda_heavy_outfit_exo1"] 			= "exo",
	["svoboda_heavy_outfit_exo2"] 			= "exo",

	-- killer
	["killer_outfit"] 						= "killer",
	["outfit_killer_m1"] 					= "killer",
	["killer_outfit_exo1"] 					= "exo",
	["killer_outfit_exo2"] 					= "exo",
	["outfit_killer_m1_exo1"] 				= "exo",
	["outfit_killer_m1_exo2"] 				= "exo",

	-- military
	["soldier_outfit"] 						= "military",
	["specops_outfit"] 						= "specops",
	["outfit_specnaz_m1"] 					= "specops",
	["military_outfit"] 					= "military",
	["soldier_outfit_exo1"]					= "exo",
	["soldier_outfit_exo2"]					= "exo",
	["specops_outfit_exo1"] 				= "exo",
	["specops_outfit_exo2"] 				= "exo",
	["outfit_specnaz_m1_exo1"] 				= "exo",
	["outfit_specnaz_m1_exo2"] 				= "exo",
	["military_outfit_exo1"] 				= "exo",
	["military_outfit_exo2"] 				= "exo",

	-- monolith
	["monolit_outfit"] 						= "monolit",
	["monolit_outfit_m1"] 					= "monolit",
	["monolit_exoskeleton"] 				= "exo",
	["monolit_outfit_exo1"] 				= "exo",
	["monolit_outfit_exo2"] 				= "exo",
	["monolit_outfit_m1_exo1"] 				= "exo",
	["monolit_outfit_m1_exo2"] 				= "exo",

	-- ecolog
	["ecolog_outfit"] 						= "ecolog",
	["protection_outfit"] 					= "ecolog",
	["scientific_outfit"] 					= "ecolog",

	-- exosceleton
	["exo1"]								= "exo",
	["exo2"]								= "exo"
}

local aVisualList = { --Список визуалов.
	["novice"] = {
		[[actors\novice\green_stalker_2]],
		[[actors\novice\green_stalker_4]],
		[[actors\novice\green_stalker_10]],
		[[actors\novice\green_stalker_antigas]]		
	},
	["bandit"] = {
		[[actors\bandit\stalker_bandit_3]],
		[[actors\bandit\stalker_bandit_5]]
	},
	["bandit_pl"] = {
		[[actors\bandit\stalker_bandit_master]],
		[[actors\bandit\stalker_bandit_veteran]]	
	},
	["killer"] = {
		[[actors\killer\stalker_ki_antigas]],
		[[actors\killer\stalker_ki_mask]],
		[[actors\killer\stalker_ki_head_1]]
	},
	["monolit"] = {
		[[actors\monolit\stalker_mo_mask]]
	},
	["specops"] = {
		[[actors\soldier\soldier_antigas]],
		[[actors\soldier\soldier_spetsnaz]],			
		[[actors\soldier\soldier_mask]]
	},
	["military"] = {
		[[actors\militari\stalker_militari_1]],
		[[actors\militari\stalker_militari_2]]	
	},
	["stalker"] = {
		[[actors\neytral\stalker_2_gas]],
		[[actors\neytral\stalker_2_ochki]],
		[[actors\neytral\stalker_3_gas]],
		[[actors\neytral\stalker_4_gas]],
		[[actors\neytral\stalker_4_ochki]],
		[[actors\neytral\stalker_4_rozh3]],
		[[actors\neytral\stalker_neytral_hood_8]],	
		[[actors\neytral\stalker_neytral_balon_8]],
		[[actors\neytral\stalker_neytral_hood_9]]	
	},
	["exo"] = {
		[[actors\stalker_neytral\stalker_light_exo_gazmask]],
		[[actors\killer\stalker_ki_exoskeleton]],
		[[actors\svoboda\stalker_sv_exoskeleton]],
		[[actors\stalker_dolg\dolg_light_exo_gazmask]],
		[[actors\stalker_neytral\stalker_light_exo_gazmask]],
		[[actors\monolit\stalker_mo_exo]]
	},
	["svoboda"] = {
		[[actors\stalker_svoboda\stalker_sv_heavy]],
		[[actors\svoboda\stalker_sv_hood_9]],
		[[actors\svoboda\stalker_sv_hood_91]]
	},
	["dolg"] = {
		[[actors\dolg\stalker_do_antigas]],
		[[actors\dolg\stalker_do_balon_8]],
		[[actors\dolg\stalker_do_balon_80]],
		[[actors\dolg\stalker_do_mask]]
	},
	["ecolog"] = {
		[[actors\ecolog\stalker_ecolog_live]],
		[[actors\ecolog\stalker_ecolog_military]]
	}
}

local aVisualGroups = { --Список допустимых визуалов, для текущей группы визуала.
	["novice"] = {
		["green_stalker"] = {["killer"] = true, ["monolit"] = true, ["military"] = true, ["stalker"] = true, ["exo"] = true, ["svoboda"] = true, ["dolg"] = true, ["ecolog"] = true}
	},
	["neytral"] = {
		["stalker_neytral_exoskeleton"] = {},
		["stalker_neytral_nauchniy"] =	{ ["military"] = true, ["exo"] = true},
		["stalker_neytral"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_2_gas"] =				{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_2_mask"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_2_ochki"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_2_rozh1"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_2_usi"] =				{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_3_gas"] =				{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_3_mask"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_3_rozh2"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_3_usi"] =				{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_4_gas"] =				{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_4_ochki"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_4_rozh3"] =			{ ["military"] = true, ["ecolog"] = true, ["exo"] = true }
	},
	["bandit"] = {
		["stalker_bandit_veteran"] = { ["specops"] = true, ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_bandit_master"] =  { ["specops"] = true, ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_bandit"] =		 { ["killer"] = true, ["monolit"] = true, ["specops"] = true, ["military"] = true, ["stalker"] = true, ["exo"] = true, ["svoboda"] = true, ["dolg"] = true, ["ecolog"] = true, ["bandit_pl"] = true }
	},
	["killer"] = {
		["stalker_ki_exoskeleton"] = {},
		["stalker_ki_nauchniy"] =	 { ["military"] = true, ["exo"] = true },
		["stalker_ki"] =			 { ["specops"] = true, ["military"] = true, ["ecolog"] = true, ["exo"] = true }
	},
	["monolit"] = {
		["stalker_mo_exo"] = {},
		["stalker_mo"] =			 { ["military"] = true, ["ecolog"] = true, ["exo"] = true }
	},
	["soldier"] = {
		["soldier_spetsnaz"] =		 { ["exo"] = true },
		["soldier"] =				 { ["specops"] = true, ["military"] = true, ["exo"] = true }
	},
	["militari"] = {
		["stalker_militari"] =		 { ["exo"] = true }
	},
	["svoboda"] = {
		["stalker_light_exo_sv"] =	 {},
		["stalker_svoboda_skat"] =	 {},
		["stalker_sv_exo"] =		 {},
		["stalker_sv_heavy"] =		 { ["exo"] = true },
		["stalker_sv_nauchniy"] =	 { ["exo"] = true },
		["stalker_sv_rukzak"] =		 { ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_sv_hood"] =		 { ["military"] = true, ["ecolog"] = true, ["exo"] = true }	
	},
	["dolg"] = {
		["dolg_light_exo"] =		 {},
		["stalker_do_exoskeleton"] = {},	
		["stalker_do_nauchniy"] =	 { ["exo"] = true },			
		["stalker_do_balon"] =		 { ["military"] = true, ["ecolog"] = true, ["exo"] = true },
		["stalker_do_mask"] =		 { ["military"] = true, ["ecolog"] = true, ["exo"] = true },	
		["stalker_do_antigas"] =	 { ["military"] = true, ["ecolog"] = true, ["exo"] = true }
	},	
	["ecolog"] = {
		["stalker_ecolog_military"] = { ["exo"] = true },			
		["stalker_ecolog"] =		  { ["exo"] = true }
	}
}

local aCommnt = { --Номер строки aVisualList коммунити для выбора какого цвета будет научник или экза
	["stalker"] = 1,
	["killer"]  = 2,
	["freedom"] = 3,
	["dolg"]    = 4,
	["ecolog"]  = 5,
	["monolith"]= 6
}

local aExactEquip = { --Жестко забитые переодевания
	["novice"] = {
		["novice_outfit"] = [[actors\novice\green_stalker_antigas]],
		["outfit_novice_m1"] = [[actors\novice\green_stalker_5]],
	},
	["stalker"] = {
		["stalker_outfit"] = [[actors\neytral\stalker_2_mask]],
		["outfit_stalker_m1"] = [[actors\neytral\stalker_3_gas]],
		["outfit_stalker_m2"] = [[actors\neytral\stalker_3_gas]],
	},
	["bandit"] = {
		["outfit_bandit_m1"] = [[actors\bandit\stalker_bandit_3]],
	},
	["bandit_pl"] = {
		["bandit_plash"] = [[actors\bandit\stalker_bandit_master]],
		["bandit_plash_m1"] = [[actors\bandit\stalker_bandit_veteran]],
	},
	["svoboda"] = {
		["svoboda_light_outfit"] = [[actors\svoboda\stalker_sv_rukzak_1]],
		["svoboda_heavy_outfit"] = [[actors\svoboda\stalker_sv_rukzak_1_1]],
	},
	["dolg"] = {
		["dolg_outfit"] = [[actors\dolg\stalker_do_antigas]],
		["outfit_dolg_m1"] = [[actors\dolg\stalker_do_antigas]],
	},
	["killer"] = {
		["killer_outfit"] = [[actors\killer\stalker_ki_mask]],
		["outfit_killer_m1"] = [[actors\killer\stalker_ki_mask]],
	},
	["monolit"] = {
		["monolit_outfit"] = [[actors\monolit\stalker_mo_hood_9]],
		["monolit_outfit_m1"] = [[actors\monolit\stalker_mo_hood_9]],
	},
	["specops"] = {
		["specops_outfit"] = [[actors\soldier_spetsnaz]],
		["outfit_specnaz_m1"] = [[actors\soldier_spetsnaz]],
	},
	["military"] = {
		["military_outfit"] = [[actors\militari\stalker_militari_antigas_1]],
	},
	["ecolog"] = {
		["ecolog_outfit"] = [[actors\ecolog\stalker_ecolog_live]],
		["scientific_outfit"]  = [[actors\neytral\stalker_neytral_nauchniy]],
		["protection_outfit"] = [[actors\ecolog\stalker_ecolog_military]],
	},
}

local needs_refit = {}

--	Апдейтим сталкера на предмет крутого костюма в инвентаре.
--	И если костюм есть и его визуал круче чем текущий, то переодеваем нпс.
function Update(oNpc, oItem)
	local aVisual = string.explode( "\\", oNpc:get_visual_name() ) --не должно быть расширения и разделителей
	--log3("~~[%s] Visual afther parsing: for [%s]: %s", script_name(), oNpc:name(), aVisual)

	if not aVisualGroups[aVisual[2]] then  --вторая строка в таблице, т.е. типа группировка
		--log3( "!![%s] Can't find visual groups for [%s]", script_name(), aVisual[2] )
		return 
	end

	--	Получаем группу визуалов в которые можно переодеть нпс.
	local aAvailableVis
	for k, v in pairs(aVisualGroups[aVisual[2]]) do --Вторую строку визуала ищем в таблице
		if string.find(aVisual[3], k) then --Если нашли вхождения третьей строки визуала в ключ таблицы выше
			--log3("~~[%s] Finded visual [%s] in aVisualGroups table. Key: [%s]", script_name(), aVisual[3], k) 
			aAvailableVis = v --табличка с группой визуалов в которые можно переодеть нпс
			break
		end
	end
	
	if not aAvailableVis then --Вот это типа {"killer","monolit","military","stalker","exo","svoboda","dolg","ecolog"}
		--log3("!![%s] Can't find aAvailableVis for [%s]", script_name(), oNpc:name())
		return
	end

------------------------------Вот тут обработку текущего визуала непися закончили, начали обрабатывать костюм, в который собираемся нпса переодевать
	local sSect = oItem:section()	
	local sVis = aOutfitsList[sSect] --Тип непися, ну там novice, bandit, exo и тд.
	local aVisList = aVisualList[sVis] --Список визуалов.

	if not sVis then
		--log3("!![%s] Can't find sect [%s] in table [aOutfitsList]", script_name(), sSect)
		return
	elseif not aVisList then
		--log3("!![%s] Can't find VisualList for [%s]", script_name(), sVis)
		return
	end

	--log3("~~[%s] Table with suitable visuals: %s", script_name(), aAvailableVis)

	local sVisual
	if aAvailableVis[sVis] then
		if aExactEquip[sVis] and aExactEquip[sVis][sSect] then --Проверяем жестко забитые переодевания.
			sVisual = aExactEquip[sVis][sSect]
		elseif sVis == "exo" then --С экзоскелетами работаем по-особому
			local sCmnt = oNpc:character_community()
			sVisual = aCommnt[sCmnt] and aVisList[aCommnt[sCmnt]] or aVisList[1] --Вот тут возможны проблемы
		else
			sVisual = aVisList[math.random( #aVisList )]
		end
		--log3("--[%s] Selected visual for [%s], exo: [%s]", script_name(), sVisual, sVis == "exo") 
	end

	local pk = get_netpk(oNpc, 1)
	ASSERT( pk:isOk(), "can't read netpacket of %s", oNpc:name() )
	local data = pk:get()

	if sVisual then --Если доступен новый визуал, то переодеваем перса.

		--Типа продажа текущего костюма
		local current_outfit_sect = ogse_real_armor.vis_to_armor(oNpc)
		if current_outfit_sect then
			--log3("--[%s] Finded outfit: [%s]", script_name(), current_outfit_sect)
			local iCost = sys_ini:r_float(current_outfit_sect, "cost")
			local iMoney = math.floor(iCost/20)	
			data.money = data.money + iMoney
		end

		data.visual_name = sVisual
		needs_refit[oNpc:id()] = true
		--log3("--[%s] planned refit npc [%s], visual: [%s]", script_name(), oNpc:name(), sVisual)
	elseif not xr_companion.is_companion(oNpc:id()) then --Если визуал недоступен, продаём костюм. Напарники не должны продавать костюмы.
		local iCost = sys_ini:r_float(sSect, "cost")
		local iMoney = math.floor(iCost/20)	
		--log3("!![%s] Can't find new visual for npc [%s], outfit: [%s]", script_name(), oNpc:name(), oItem:section())
		data.money = data.money + iMoney
	end

	pk:set(data)

	local item = alife():object(oItem:id())
	if item then
		alife():release(item, true)
	end
end

------------------------------
-- переодевание
------------------------------
function refit_npc(npc, npc_id)
   local s_npc = alife():object(npc_id)
   s_npc.force_offline = true
   go_offline_watch_timer(npc_id):start()
end

-- служебный таймер, ждущий ухода в оффлайн
class "go_offline_watch_timer" (ogse_qt.quick_timer)
function go_offline_watch_timer:__init(npc_id) super()
   self.npc_id = npc_id -- запоминаем в таймере id непися
end
function go_offline_watch_timer:condition()
   return not level.object_by_id(self.npc_id) -- ждём исчезновения клиентского объекта
end
function go_offline_watch_timer:action()
   local s_npc = alife():object(self.npc_id)
   if s_npc then
      s_npc.force_offline = nil -- отправляем обратно в онлайн
   end
end


-- Возвращает угол между проекциями векторов vec1 и vec2 на
-- горизонтальную плоскость.
-- положительный угол - доворот vec1 до vec2 по часовой.
function horz_angle( vec1, vec2 )
  local x =  vec2.x * vec1.x + vec2.z * vec1.z
  -- повернули систему координат
  local y = -vec2.z * vec1.x + vec2.x * vec1.z
  return math.atan2( y, x )     -- угол доворота от -pi до pi
end

local visibility_treshold_value = 0.45 -- трешхолд видимости

local function actor_see( npc )
  -- арктангенс 45 град /npc:position():distance_to(db.actor:position())
  local dangerang = 1
  local ang = horz_angle(
    device().cam_dir, npc:position():sub( device().cam_pos )
  )
  local visibility_value = level.cover_in_direction(
    db.actor:level_vertex_id(), npc:position():sub( db.actor:position() )
  )
  local tgt = ang > -dangerang and ang < dangerang
    and visibility_value > visibility_treshold_value
  if tgt then
    return true
  end
  return false
end


------------------------------
-- периодическая перепроверка
------------------------------
function PeriodicalUpdate(oNpc)
	if oNpc:wounded() then return end

	if needs_refit[oNpc:id()] then
		if not actor_see(oNpc) and not oNpc:is_talking() then
			oNpc:clear_animations()
			needs_refit[oNpc:id()] = nil
			refit_npc(oNpc ,oNpc:id())
			return
		end
	end
	oNpc:iterate_inventory(function(npc, item)
		if item:is_outfit() or is_equippable_exo(item) then
			if aOutfitsList[item:section()] then
				Update(oNpc, item)
			end
		end
	end)
end

function is_equippable_exo(item)
	local sect = item:section()
	return sect == "exo1" or sect == "exo2"
end
