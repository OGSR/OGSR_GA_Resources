-- -*- mode: lua; coding: windows-1251-dos -*-

--Здесь будут находиться функции с постоянной проверкой в биндере-----------------------------------
--03.02.2012----------------------------------------------------------------------------------------

function attach(sm)
	sm:subscribe({ signal = "on_use",			fun = this.on_use_item })
	sm:subscribe({ signal = "on_item_to_belt",	fun = this.on_thunderbird_to_belt })
	sm:subscribe({ signal = "on_item_to_ruck",	fun = this.on_thunderbird_to_ruck })
	sm:subscribe({ signal = "on_drop",			fun = this.on_thunderbird_to_ruck })
	sm:subscribe({ signal = "on_first_update",	fun = this.check_subscribe_strange_zone_effects })
	sm:subscribe({ signal = "on_take",			fun = this.fake_arts_delete })
	sm:subscribe({ signal = "on_take",			fun = this.cheburashka_greeting })
	sm:subscribe({ signal = "on_take",			fun = this.dolg_zahvat })
	sm:subscribe({ signal = "on_take",			fun = this.af_ray_travel })
	sm:subscribe({ signal = "on_take",			fun = this.af_uley_packed })
	sm:subscribe({ signal = "on_take",			fun = this.af_uley_effect })
	sm:subscribe({ signal = "on_item_to_belt",	fun = this.af_mayatnik_effect })
	sm:subscribe({ signal = "on_take",			fun = this.magnit_part_work_on_take })
	sm:subscribe({ signal = "on_item_to_belt",	fun = this.magnit_part_work_from_belt })
	sm:subscribe({ signal = "on_take",			fun = this.af_puzir_destroy })
	sm:subscribe({ signal = "on_take",			fun = this.af_light_destroy })
	sm:subscribe({ signal = "on_update",	fun = this.dar_samogon_bonus })
end

-- Список используемых из инвентаря квестовых предметов
-- Работает следующим образом:
-- Ключ таблицы это секция предмета
-- значением элемента таблицы может быть два типа:
-- Первый - это строка. Если элемент строчный, то ГГ при использовании
-- этого предмета выдастся инфопоршен этой строкой.
-- Оформлять такие строки следует так:
-- ["секция_вашего_предмета"] 			= "инфопоршен_который_надо_выдать",
-- Второй - это функция. Тогда при использовании этого предмета вызовется содержимое этой функции.
-- Оформлять такие функции следует так:
-- ["секция_вашего_предмета"] 			= function () 
	-- вызов_вашей_функции1()
	-- вызов_вашей_функции2()
-- end,

local pda =
{
	
	-- Ключи сержанта из МГ:	
	["cit_tow_box_keys"] 		= function ()
		jekan_work.use_cit_tow_box_keys()
		soundtrack.keys()
	end,

	-- "Маятник (целый)":	
	["magnit_full"] 		= function ()
		jekan_work.spawn_magnit_part()
		jekan_work.mark_magnit_part()
		jekan_work.actor_disable_inventory()
		ogse.spawn_item_in_inv("af_magnit_part1")
	end,

	-- Дипломат командира:
	["kommander_diplomat"] 			= function () 
		ogse.spawn_item_in_inv("kommander_key")
		db.actor:give_money(10000)
		news_manager.send_tip(db.actor, "kommander_key_in", nil, "default", 5000, nil)
		news_manager.send_tip(db.actor, "kommander_money_in", nil, "money", 5000, nil)
		soundtrack.diplomat_open()
	end,

	-- "Чебурашка":	
	["cheb"] = function ()
		if db.actor:dont_has_info("cheb_task1") then
			soundtrack.cheb_open()
			jekan_devices2.cheb1_1()
			jekan_work.give_chebur_hello_portion()
			db.actor:disable_info_portion("cheb_sleep")
		elseif db.actor:dont_has_info("cheb_sleep") then
			soundtrack.cheb_open()
			jekan_devices2.cheb2_1()
			db.actor:disable_info_portion("cheb_sleep")
		else
			soundtrack.cheb_open()
			jekan_devices2.cheb2_7()
			db.actor:disable_info_portion("cheb_sleep")
		end
	end,

	-- ПДА Диггера юры:
	["diggers_pda"] 			= function () 
			db.actor:give_info_portion("diggers_pda_info")
			jekan_work.digger_weapon_change()
	end,
	
	-- ПДА Князя:
	["knyaz_pda"] 			= function () 
		if not has_alife_info("knyaz_pda_info") then
			db.actor:give_info_portion("knyaz_pda_info")
			news_manager.send_tip(db.actor, "knyaz_pda_info", nil)   
		end	
	end,
	-- ПДА Проныры:	
	["robber_pda"] 			= function () 
		if not has_alife_info("robber_pda_info") then
			db.actor:give_info_portion("robber_pda_info")
			news_manager.send_tip(db.actor, "robber_pda_info", nil)   
		end	
	end,
	
	-- ПДА Жеки:	
	["bratstvo_agent_pda"] 			= "zapravka_pda_off",
	
	-- Детонатор наемников:
	["dar_road_detonator"] 			= function () 
		ogse.start_timer("road_bomb_expl",2)
		jekan_work.dar_road_bomb_expl()
	end,
	
	-- Планшет наемников:
	["dar_merc_planshet"] 			= "dar_merc_planshet_info",
	
	-- ПДА Щукина:
	["zona_bro2_pda"] 			= "zona_bro2_pda_info",
	
	
	
}

----------------------------------------------------------------------------------------------------

function on_use_item(obj, sobj)
	--if not obj or not sobj then return end

	local portion = pda[obj:section()]
	if portion ~= nil then 
		if type(portion) == "string" then
			if not has_alife_info(portion) then
				db.actor:give_info_portion(portion)
			end		
		elseif type(portion) == "function" then
			portion()
		end
		return true
	end
end

----------------------------------------------------------------------------------------------------

function magnit_part_work_from_belt(obj)
	if obj:section() == "af_magnit_part1" then
		return jekan_work.teleport_to_magnit()
	end
end

function magnit_part_work_on_take(obj)
	if obj:section() == "af_magnit_part1" or obj:section() == "af_magnit_part2" then
		if db.actor:object("af_magnit_part1") ~= nil  and db.actor:object("af_magnit_part2") ~= nil  then
			ogse.remove_item_from_inventory(db.actor:object("af_magnit_part1"), db.actor)
			ogse.remove_item_from_inventory(db.actor:object("af_magnit_part2"), db.actor)
			ogse.spawn_item_in_inv("magnit_full")
			news_manager.send_tip(db.actor, "af_magnit_is_full", nil, "anomal", 3000, nil)
		end
		return true
	end
end

----------------------------------------------------------------------------------------------------
	local dz_zones = {
		["strange_zone1_sound"] = {sig_off = "strangezone1_off", sig_birth = "af_invis1_1_birth", timer = {"str_zon1", 0, 9,0}},
		["strange_zone2_sound"] = {sig_off = "strangezone2_off", sig_birth = "af_invis2_1_birth", timer = {"str_zon2", 0, 7,0}},
		["strange_zone3_sound"] = {sig_off = "strangezone3_off", sig_birth = "af_invis3_1_birth", timer = {"str_zon3", 0,10,0}},
		["strange_zone4_sound"] = {sig_off = "strangezone4_off", sig_birth = "af_invis4_1_birth", timer = {"str_zon4", 0,12,0}},
		["strange_zone5_sound"] = {sig_off = "strangezone5_off", sig_birth = "af_invis5_1_birth", timer = {"str_zon5", 0, 8,0}},
		["strange_zone6_sound"] = {sig_off = "strangezone6_off", sig_birth = "af_invis6_1_birth", timer = {"str_zon6", 0, 9,0}},
		["strange_zone7_sound"] = {sig_off = "strangezone7_off", sig_birth = "af_invis7_1_birth", timer = {"str_zon7", 1, 0,0}},		
	}
	local dz_arts = {
		["fake_art1"] = "af_polter",
		["fake_art2"] = "af_sparks",
		["fake_art3"] = "af_resine",
	}

function fake_arts_delete(obj)
	if dz_arts[obj:section()] then
		for fake_art, real_art in pairs(dz_arts) do
			if db.actor:object(fake_art) then
				for zone, zone_params in pairs(dz_zones) do
					if xr_conditions.actor_in_zone(nil,nil,{zone}) then
						ogse.remove_item_from_inventory_by_name(fake_art, db.actor)
						ogse.spawn_item_in_inv(real_art, db.actor)
						db.actor:give_info_portion(zone_params.sig_off)
						news_manager.send_tip(db.actor, "strange_zone_af_gathered", nil, "anomal", 5000, nil)
						db.actor:disable_info_portion(zone_params.sig_birth)
						ogse.g_start_timer(unpack(zone_params.timer))					
					end
				end
			end
		end
		return true
	elseif obj:section() == "cheb_fakeart" then
		jekan_work.delete_cheb_fakeart()
		jekan_work.give_cheb_realart()
		ogse.start_timer("cheb_art",1800)
		soundtrack.cheb_fakeart_konteiner_open()
		return true
	end
end

function restart_zone_1()
	local zone_params = dz_zones["strange_zone1_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone1_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function restart_zone_2()
	local zone_params = dz_zones["strange_zone2_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone2_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function restart_zone_3()
	local zone_params = dz_zones["strange_zone3_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone3_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function restart_zone_4()
	local zone_params = dz_zones["strange_zone4_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone4_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function restart_zone_5()
	local zone_params = dz_zones["strange_zone5_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone5_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function restart_zone_6()
	local zone_params = dz_zones["strange_zone6_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone6_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function restart_zone_7()
	local zone_params = dz_zones["strange_zone7_sound"]
	db.actor:give_info_portion(zone_params.sig_off)
	db.actor:give_info_portion("strangezone7_has_same_art")
	db.actor:disable_info_portion(zone_params.sig_birth)
	ogse.g_start_timer(unpack(zone_params.timer))
end

function on_timer_cheb2(params_string)
	if db.actor:dont_has_info("cheb_hello") then
		jekan_work.send_cheb_hello_tip2()
		ogse_st_mgr.start_timer("cheb1", 7, script_name()..".on_timer_cheb1")
	end
end
	
function on_timer_cheb1(params_string)
	if db.actor:dont_has_info("cheb_hello") then
		jekan_work.send_cheb_hello_tip1()
		ogse_st_mgr.start_timer("cheb2", 7, script_name()..".on_timer_cheb2")
	end
end

function cheburashka_greeting(obj)
	if obj:section() == "cheb" and db.actor:dont_has_info("cheb_greeting") then
		ogse_st_mgr.start_timer("cheb1", 7, script_name()..".on_timer_cheb1")
		db.actor:give_info_portion ("cheb_greeting")
		return true
	end
end

function dolg_zahvat(obj)
	if obj:section() == "klondaik_flash_2_fake" then
		jekan_work.actor_dolg_zahvat()

		local wnd = level.get_car_body_wnd()
		if wnd then --Закроем окно обыска
			level.start_stop_menu(wnd, true)
		end

		ogse.remove_item_from_inventory(db.actor:object("klondaik_flash_2_fake"))
		return true
	end
end

function af_ray_travel(obj)
	if obj:section() == "af_ray" and db.actor:dont_has_info("have_af_ray") then
		db.actor:set_actor_position(vector():set(149.91,0.43,71.97))
		db.actor:give_info_portion ("have_af_ray")
		jekan_work.get_items_from_arena_box()
		-- news_manager.send_tip(db.actor, "voronin_after_arena_tip", nil)
		jekan_work.voronin_after_arena_tip()
		ogse.remove_item_from_inventory(db.actor:object("wpn_knife_arena"))
		return true
	end
end

function af_mayatnik_effect(obj)
	if obj:section() == "af_mayatnik" then
		level.add_pp_effector("snd_shock.ppe", 999, false)
		ogse.remove_item_from_inventory(db.actor:object("af_mayatnik"), db.actor)
		db.actor:set_actor_position(vector():set(423.17,-2.06,-363.09))
		db.actor:give_info_portion ("have_af_mayatnik")
		jekan_work.release_zapravka_port()
		ogse.spawn_item_in_inv("mayatnik_p1", db.actor)
		ogse.spawn_item_in_inv("mayatnik_p2", db.actor)
		ogse.spawn_item_in_inv("mayatnik_p3", db.actor)
		ogse.spawn_item_in_inv("mayatnik_p4", db.actor)
		news_manager.send_tip(db.actor, "af_mayatnik_destroy", nil, "anomal", 5000, nil)
		return true
	end
end


function af_puzir_destroy(obj)
	if obj:section() == "af_puzir" and db.actor:dont_has_info("have_af_puzir") then
		ogse.remove_item_from_inventory_by_name("af_puzir",db.actor)
		soundtrack.af_puzir_destroy()
		news_manager.send_tip(db.actor, "af_puzir_destroyed", nil)
		db.actor:give_info_portion ("af_puzir_destroyed")
		return true
	end
end

----------------------------------------------------------------------------------------------------

function af_light_destroy(obj)
	if obj:section() == "af_light" and db.actor:dont_has_info("af_light_have") then
		ogse.remove_item_from_inventory_by_name("af_light",db.actor)
		soundtrack.af_puzir_destroy()
		news_manager.send_tip(db.actor, "af_puzir_destroyed", nil)
		db.actor:give_info_portion ("af_light_destroyed")
		return true
	end
end


-- Эффекты от артефакта "Улей" ---------------------------------------------------------------------
function uley_timer_1()
	if db.actor:dont_has_info("izgoy_doctor_reward") then
		ogse.start_timer("uley_2",50)
		jekan_update.uley_pain()
	end
end

function uley_timer_2()
	if db.actor:dont_has_info("izgoy_doctor_reward") then
		ogse.start_timer("uley_1",50)
		jekan_update.uley_pain()
	end
end

function uley_pain()
	if db.actor:alive() then
		level.add_cam_effector("camera_effects\\actor_move\\go_front.anm", 25, false, "")
		level.add_pp_effector ("blink.ppe", 666, false)	
		soundtrack.actor_breath_sound()
	end
end

function af_uley_effect(obj)
	if	obj:section() ~= "af_container_full"
		or has_alife_info("izgoy_doctor_reward")
		or has_alife_info("af_uley_reaction")
		or not has_alife_info("af_uley_spawn")
	then
		return
	end

	local scientvisuals = {
		["scientific_outfit"] = true,
		["ecolog_outfit"] = true,
		["protection_outfit"] = true
	}
	if not db.actor:item_in_slot(6) or not scientvisuals[db.actor:item_in_slot(6):section()] then
		level.add_pp_effector("monolith_off.ppe", 999, false)
		level.add_cam_effector("camera_effects\\head_shot.anm", 999, false, "")
		soundtrack.actor_breath_sound()
		ogse.start_timer("uley_1",10)
		db.actor:give_info_portion ("af_uley_reaction") 
		jekan_work.uley_zaraza_message()
	end
	return true
end

-- Упаковываем "Улей" в контейнер ------------------------------------------------------------------

function af_uley_packed(obj)
	if obj:section() == "af_uley" then
		ogse.remove_item_from_inventory_by_name("af_container_empt", db.actor)
		ogse.remove_item_from_inventory_by_name("af_uley", db.actor)
		ogse.spawn_item_in_inv("af_container_full", db.actor)
		soundtrack.af_uley_packed()
		news_manager.send_tip(db.actor, "af_uley_packed", nil)
		return true
	end
end

----------------------------------------------------------------------------------------------------

function shustriy_atp_relations()			-- не пашет, но оставим на всякий пожарный
	if db.actor:dont_has_info("atp_band_hitted") then
		jekan_work.shustriy_atp_friend()
	end
	if has_alife_info("atp_band_hitted") then
		jekan_work.shustriy_atp_enemy()
	end
end

-- Артефакт Погодник -------------------------------------------------------------------------------
local thunderbird_subscribed

function thunderbird_subscribe()
	if not thunderbird_subscribed then
		thunderbird_subscribed = { signal = "on_update", fun = this.thunderbird_visual_effect }
		ogse_signals.get_mgr():subscribe( thunderbird_subscribed )
		--log3("--[%s] thunderbird subscribed!", script_name())
	end
end

function thunderbird_unsubscribe()
	if thunderbird_subscribed then
		ogse_signals.get_mgr():unsubscribe( thunderbird_subscribed )
		thunderbird_subscribed = nil
		--log3("~~[%s] thunderbird UNsubscribed!", script_name())
	end
end

function on_thunderbird_to_belt(obj)
	if obj:section() == "af_thunderbird" then
		thunderbird_subscribe()
	end
end

function on_thunderbird_to_ruck(obj)
	if obj:section() == "af_thunderbird" then
		get_hud():RemoveCustomStatic("blow")
		thunderbird_unsubscribe()
	end
end

function thunderbird_visual_effect()
	local hud = get_hud()
	local sm = ogse_signals.get_mgr()
	local next_time = ogse_weather_mgr.get_surge_time()
	local cs = hud:GetCustomStatic("blow")
	if not cs then
		cs = hud:AddCustomStatic("blow", true)
	end
	cs = cs:wnd()

	if next_time > 1 then
		cs:SetText(game.translate_string("thunderbird_until_next_emission").." "..math.floor(next_time).." "..game.translate_string("thunderbird_until_next_emission_hours"))
		sm:reschedule( 60000 / ogse.game_time_factor )
	elseif next_time >= 0.5 then
		cs:SetText(game.translate_string("thunderbird_1h"))	
		sm:reschedule( 60000 / ogse.game_time_factor )
	elseif db.actor:dont_has_info("pre_blowout") then
		cs:SetText(game.translate_string("thunderbird_halfh"))
		sm:reschedule( math.random(1000, 2000) )
	else	
		cs:SetText(game.translate_string("thunderbird_now"))
		sm:reschedule( math.random(1000, 2000) )
	end
end


-- Эффект самогона от Захарыча: ----------------------------------------------------------------------

function dar_samogon_bonus()
if db.actor and has_alife_info("dar_samogon_bonus") and db.actor:alive() then
	db.actor.health = 0.001
	level.add_pp_effector("death1.ppe", 799, false)
	local st = get_hud():GetCustomStatic("dar_samogon_effect") or get_hud():AddCustomStatic("dar_samogon_effect",true)
	st.m_endTime = time_global()/1000 + 1
end
end

function disable_dar_samogon_info()
	db.actor:disable_info_portion("dar_samogon_bonus")
	db.actor:disable_info_portion("dar_apparat_recharge")
end


-- Ржавчина ----------------------------------------------------------------------------------------
function check_subscribe_strange_zone_effects()
	for n = 1, 7 do
		local zone = db.zone_by_name["strange_zone"..n]
		if zone then
			--log3("--[%s.check_subscribe_strange_zone_effects] found zone [%s]. Subscribe!", script_name(), "strange_zone"..n)
			ogse_signals.get_mgr():subscribe({ signal = "on_update", fun = this.upd_strange_zone_effects })
			return
		end
	end
end

function upd_strange_zone_effects()
	local sm = ogse_signals.get_mgr()
	local actor_in_strange_zone
	local dist
	for n = 1, 7 do
		local zone = db.zone_by_name["strange_zone"..n]
		if zone then
			local actor_pos = db.actor:position()
			local dist_new = zone:position():distance_to( actor_pos )
			dist = ( (not dist) or (dist_new < dist) ) and dist_new or dist
			actor_in_strange_zone = zone:inside(actor_pos)
		end
	end
	if not dist then
		log3("!![%s.upd_strange_zone_effects] ERROR!!! Zone not found!!!!", script_name())
		sm:reschedule( 60000 )
		return
	end
	if actor_in_strange_zone then
		strange_zone_actor_particle()
		rustyfield_effect1()
		rustyfield_effect2()
		rustyfield_effect3()
		sm:reschedule( 1000 )
		return
	end
	sm:reschedule(
		( dist < 25 and 1000 )
		or ( dist < 50 and math.random(3000, 4000) )
		or math.random( 7000, 10000 )
	)
end

function rustyfield_effect1()
	local outfit = db.actor:item_in_slot(6)
	if outfit and outfit:condition() >=0.30 then
		local h = hit()
		h.power = 0.07
		h.direction = vector():set (0, 0, 0)
		h.impulse = 0
		h.draftsman = db.actor
		h.type = hit.chemical_burn

		outfit:hit(h)
	end
end

function rustyfield_effect2()
	local gun1 = db.actor:item_in_slot(1)
	if gun1 and gun1:condition() >=0.30 then
		wpn_hit(gun1)
	end
end

function rustyfield_effect3()
	local gun2 = db.actor:item_in_slot(2)
	if gun2 and gun2:condition() >=0.30 then
		wpn_hit(gun2)
	end
end

function wpn_hit(wpn)
	local h = hit()
	h.power = 0.05
	h.direction = vector():set (0, 0, 0)
	h.impulse = 0
	h.draftsman = db.actor
	h.type = hit.explosion

	wpn:hit(h)
end

-- периодическое срабатывание странных аномалий
function strange_zone_actor_particle()
	local pos = db.actor:position()
	-- local fx_particle_name = "anomaly\\a-03-growing-sparks_old00"
	local fx_particle_name = "anomaly\\a-03-sparks-03_old00"
	local fx_particle = particles_object(fx_particle_name)
	fx_particle:play_at_pos(pos)

	local snd_obj = xr_sound.get_safe_sound_object([[anomaly\anomaly_gravy_blast00]])
	snd_obj:play_at_pos(db.actor, pos, 0, sound_object.s3d)
end
--[[
local last_playing_time = game.get_game_time()
local period = 10
local sounds_inited = 0

local x18_giant_sounds = {}

function init_giant_sounds()
	for i = 1,5 do
		local snd_name = "monsters\\giant2\\giant_hurt_"..tostring(i-1)
		x18_giant_sounds[i] = xr_sound.get_safe_sound_object(snd_name)
	end
end

function update_little_pseudogiant_sound(giant)
	if sounds_inited == 0 then
		init_giant_sounds()
		sounds_inited = 1
	end
	if game.get_game_time():diffSec(last_playing_time) > period then
		local index = math.random(1,5)
		local sound = x18_giant_sounds[index]
		log1("playing sound "..tostring(index))
		sound:play_at_pos(db.actor, giant:position(), 0, sound_object.s3d)
		period = math.random(12,14)
		last_playing_time = game.get_game_time()
	end
end]]

-- Первач Лесника
function pervach_use()
	local level_name = level.name()
		-- до выполнения квеста:
		if db.actor:dont_has_info("dar_samogon_task_end") then
			if level_name == "k01_darkscape_ogse" then
				if db.actor:dont_has_info("dar_samogon_trance_start") then
					level.add_cam_effector("camera_effects\\surge_02.anm", 6666, false, "jekan_update.pervach_use_quest")
					level.add_pp_effector("surge_fade.ppe", 11, false)
				end
			elseif level_name ~= "k01_darkscape_ogse" then
				soundtrack.actor_no()
			end
		-- после выполнения квеста:
		elseif db.actor:has_info("dar_samogon_task_end") then
			if db.actor:dont_has_info("dar_samogon_bonus") then
				db.actor:give_info_portion ("dar_samogon_bonus")
				ogse_st_mgr.start_visual_timer("dar_samogon_bonus_logo", 30, script_name()..".disable_dar_samogon_info")
				soundtrack.dar_samogon_snd()
				jekan_work.actor_disable_inventory()
			end
		end
end


function pervach_use_quest()
	db.actor:give_info_portion("dar_samogon_trance_start")
	level.add_cam_effector("camera_effects\\surge_01.anm", 6666, false, "xr_effects.dar_samogon_think_timer")
end
