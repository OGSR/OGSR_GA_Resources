

function attach(sm)
  sm:subscribe({ signal = "on_key_down", fun = this.quicksave })
  sm:subscribe({ signal = "on_key_down", fun = this.quickload })
  sm:subscribe({ signal = "on_key_down", fun = this.namesave })
end

function quicksave(key, bind)
	if level.main_input_receiver() or not db.actor:alive() then return end

	if bind == key_bindings.kQUICK_SAVE then
		local cnt = ogse.load_var( "next_quicksave", 0 )
		if cnt >= 9 then
			cnt = 1
		else
			cnt = cnt + 1
		end
		ogse.save_var( "next_quicksave", cnt, "u8" )
		local next_save = string.format( "%s_quicksave_%u", user_name(), cnt )
		cmd( "save", next_save )
	end
end

function quickload(key, bind)
	if level.main_input_receiver() then return end

    if bind == key_bindings.kQUICK_LOAD then
        cmd("load_last_save")
    end
end

--[[------------------------------------------------------------------------------------
	Реализация сохранения с именем в формате:
	<имя пользователя> <локация> <игровые дни><игровые часы><игровые минуты>.sav
--]]------------------------------------------------------------------------------------
function namesave(key, bind)
	if level.main_input_receiver() or not db.actor:alive() then return end

	if bind == key_bindings.kNAME_SAVE then
		local levname = game.translate_string( level.name() )
		local days = news_manager.game_days()
		local hours = level.get_time_hours()	
		local minutes = level.get_time_minutes() 
		local savename = dsh.safe_file_name( string.format( "%s %u. %02u-%02u. %s", game.translate_string( "ui_autosave_day" ), days, hours, minutes, levname ) )
		cmd( "save " .. savename )
	end
end
