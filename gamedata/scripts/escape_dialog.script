

--------------------------------------------------------------------------------------------------------
-- Dialog & InfoPortions Function
--------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------
-- Trader
-----------------------------------------------------------------------------------------------------
function all_stalker_gulags(w)
	return xr_gulag.isGulagEnemy( w, db.actor )
end

function factions_repair_checkstalker_r(trader, actor)
	local whatami = db.actor:character_community()
	local howmuch = 20000
	--local gulag = xr_gulag.get_gulag_by_name ("esc_lager")
	--if (gulag) then
	if all_stalker_gulags("esc_lager") == true or
		 all_stalker_gulags("bar_dolg_general") == true or
		 all_stalker_gulags("bar_dolg_bunker") == true or
		 all_stalker_gulags("bar_visitors") == true or
		 all_stalker_gulags("bar_dolg_veterans") == true or
		 all_stalker_gulags("bar_zastava_2") == true or
		 all_stalker_gulags("bar_zastava") == true or
		 relation_registry.community_goodwill("stalker", db.actor:id()) < 0 and
		 db.actor:money() >= howmuch
		then
		if (whatami ~= "monolith") and
			 (whatami ~= "bandit") and
			 (whatami ~= "military") and
			 (whatami ~= "killer")
			then
			return true
		end
	end
	return false
end

function factions_repair_checkstalker(first_speaker, second_speaker)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
	local item_name_and_price = ""
	local howmuch = 8000
	--local gulag = xr_gulag.get_gulag_by_name ("esc_lager")
	--if (gulag) then
	if all_stalker_gulags("esc_lager") == true or
		 all_stalker_gulags("bar_dolg_general") == true or
		 all_stalker_gulags("bar_dolg_bunker") == true or
		 all_stalker_gulags("bar_visitors") == true or
		 all_stalker_gulags("bar_dolg_veterans") == true or
		 all_stalker_gulags("bar_zastava_2") == true or
		 all_stalker_gulags("bar_zastava") == true or
		 relation_registry.community_goodwill("stalker", db.actor:id()) < 0 and
		 db.actor:money() >= howmuch
		then
		item_name_and_price = game.translate_string("list_factions_repair_4").." %c[255,238,155,23]"..howmuch.."Ru%c[default]"
		db.actor:give_talk_message(item_name_and_price, task_texture, task_rect, "other_iconed_answer_item")
	end
end

---
function trader_alredy_give_job(trader, actor)
	if (has_alife_info("agroprom_military_case") and not has_alife_info("agroprom_military_case_done")) or
	   (has_alife_info("escape_blockpost_case") and not has_alife_info("escape_blockpost_case_done")) or
	   (has_alife_info("tutorial_artefact_start") and not has_alife_info("tutorial_artefact_done")) or
	   (has_alife_info("tutorial_wounded_start") and not has_alife_info("esc_serious_talk"))
	then
		return true
	end
	return false 
end

function trader_give_extra_job(trader, actor)
	local actor = db.actor
	if has_alife_info("escape_blockpost_case") and not has_alife_info("escape_blockpost_case_done")
	then
		return true
	end
	return false
end

function bandits_die(actor,npc)
	local actor = db.actor
	if has_alife_info("esc_kill_bandits_quest_kill") and not has_alife_info("esc_kill_bandits_noquest_kill")
	then
		return true
	end
	return false
end

function trader_need_extra_job(trader, actor)
	if not has_alife_info("escape_blockpost_case") and 
	    has_alife_info("esc_return")
	then
		return true
	end
	return false
end

function is_tutorial()
	return not has_alife_info("tutorial_end")
end

function is_not_tutorial()
	return has_alife_info("tutorial_end")
end

function is_not_tutorial_art(actor, trader)
	local tutorial_artefact = db.actor:object("af_blood_tutorial")
	if (has_alife_info("tutorial_artefact_start") and not has_alife_info("tutorial_artefact_done")
		and  tutorial_artefact ~= nil) or has_alife_info("tutorial_artefact_done")
	then
		return true
	end
	return false
end

function not_final_job(trader, actor)
	local actor = db.actor
	return not has_alife_info("escape_blockpost_case_done")
end

function trader_test(actor, npc)
	return true
end



function trader_dont_give_job(first_speaker, second_speaker)
	return not trader_alredy_give_job(first_speaker, second_speaker)
end

function finalize_quests(first_speaker, second_speaker)
	if tutorial_artefact_end(first_speaker, second_speaker) == true or
	   tutorial_wounded_end(first_speaker, second_speaker) == true
	then
		return true
	end
	return false
end

function not_finalize_quests(first_speaker, second_speaker)
	return not this.finalize_quests(first_speaker, second_speaker)	
end

function tutorial_artefact_end(first_speaker, second_speaker)
	local actor = db.actor
	local tutorial_artefact = first_speaker:object("af_blood_tutorial")
	if has_alife_info("tutorial_artefact_start") and 
	   not has_alife_info("tutorial_artefact_done") and
	   tutorial_artefact ~= nil
	then
		return true
	end
	return false
end

function tutorial_artefact_have_not(first_speaker, second_speaker)
	local actor = db.actor
	local tutorial_artefact = first_speaker:object("af_blood_tutorial")
	if has_alife_info("tutorial_artefact_start") and 
	   not has_alife_info("tutorial_artefact_done") and
	   tutorial_artefact == nil
	then
		return true
	end
	return false
end

function tutorial_wounded_end(first_speaker, second_speaker)
	local actor = db.actor
	-- local wounded_flash = first_speaker:object("esc_wounded_flash")
	if has_alife_info("tutorial_wounded_start")	and 
		has_alife_info("tutorial_wounded_give_info")	and 	
	   not has_alife_info("esc_serious_talk")
 -- and   wounded_flash ~= nil
	then
		return true
	end
	return false
end

function trader_dont_has_job(first_speaker, second_speaker)	
	if trader_need_military_case(first_speaker, second_speaker) == false and
		trader_need_blockpost_box(first_speaker, second_speaker) == false 
	then
		return true
	end
	return false
	
end

function trader_sdelka_done(first_speaker, second_speaker)
	if (not db.actor:has_info("esc_kvest_sdelka_with_mils_start") and db.actor:has_info("agroprom_military_case")) then
		--log1("a")
		return false -- Вообще квест не взяли, поэтому никак не выполнили
	else
		-- esc_serious_talk
		-- Квест взяли, но его ещё не сдали/провалили
		if db.actor:has_info("esc_kvest_sdelka_with_mils_start") and not (db.actor:has_info("esc_kvest_sdelka_with_mils_complete") or db.actor:has_info("esc_kvest_sdelka_with_mils_fail")) then
			--log1("a")
			return false
		else
			--log1("b")
			return true
		end
	end
end

function nnn()
	return ((not db.actor:has_info("esc_kvest_sdelka_with_mils_start")) or (db.actor:has_info("esc_kvest_sdelka_with_mils_start") and db.actor:has_info("esc_kvest_sdelka_with_mils_start")))
end

function trader_doesnt_need_sdelka_with_mils()
	if not tasks_functor.enable_kvest_sdelka_with_mils() then 
		log1("trader_doesnt_need_sdelka_with_mils return true, because sdelka is not avaible")
	return true
	else
		if db.actor:has_info("esc_kvest_sdelka_with_mils_start") and (db.actor:has_info("esc_kvest_sdelka_with_mils_complete") or db.actor:has_info("esc_kvest_sdelka_with_mils_fail"))
		then 
			log1("trader_doesnt_need_sdelka_with_mils return true")
			return true 
		end
	end
	return false
end

function sdelka_with_mils_done_fail_nan()
	return not tasks_functor.enable_kvest_sdelka_with_mils() or db.actor:has_info("esc_kvest_sdelka_with_mils_complete") or db.actor:has_info("esc_kvest_sdelka_with_mils_fail")
end

--' Escape tutorial artefact
function have_tutorial_artefact(first_speaker, second_speaker)
  	return first_speaker:object("af_blood_tutorial") ~= nil
end
function give_medkit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit", "in")
end
function give_tutorial_artefact(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_blood_tutorial", "out")
end


--' Meet fox
function have_fox_info(first_speaker, second_speaker)
  	return first_speaker:object("fox_flash") ~= nil
end

--' fox help

function transfer_medikit_to_fox (player, wounded)
	wounded:set_relation(game_object.friend, player)
	db.actor:give_info_portion("escape_fox_heal")
end

function give_weapon_to_actor (trader, actor)
    dialogs.relocate_item_section(trader, "ammo_12x70_kart", "in")
	dialogs.relocate_item_section(trader, "ammo_9x18_fmj", "in")
    dialogs.relocate_item_section(trader, "ammo_9x18_fmj", "in")
    dialogs.relocate_item_section(trader, "wpn_pm", "in")
end

function give_radio_to_actor (trader, actor)
	if not db.actor:object("hand_radio_f") then
		dialogs.relocate_item_section(trader, "hand_radio_f", "in")
	end
end


--' Escape blockpost box
function have_blockpost_case(first_speaker, second_speaker)
  	return first_speaker:object("quest_case_01") ~= nil
end


function give_blockpost_case(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "quest_case_01", "out")
end

function give_blockpost_case_reward(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_ump45_tact", "in")
	dialogs.relocate_money(first_speaker, 15000, "in")
end

--' Agroprom military case
function trader_need_military_case(first_speaker, second_speaker)
    if has_alife_info("esc_serious_talk") and
	   not has_alife_info("agroprom_military_case") --or
	  -- trader_sdelka_done(first_speaker, second_speaker) == true
	then
		if trader_sdelka_done(first_speaker, second_speaker) == true then
			return true
		end
	end
	return false
end

--' Escape trader artefact
function have_artefact_from_fleshes(first_speaker, second_speaker)
	local actor = db.actor
	if actor ~= nil and
	   (actor:object("af_vyvert") ~= nil or
	   actor:object("af_gravi") ~= nil or
	   actor:object("af_gold_fish") ~= nil)
	then
		return true
	end
  	return false
end


--' Ящик с блокпоста
function trader_need_blockpost_box(first_speaker, second_speaker)
    if has_alife_info("tutorial_end") and
	   has_alife_info("esc_trader_speak") and
	   not has_alife_info("escape_blockpost_case")
	then
		return true
	end
	return false
end

--' tutorial wounded in vagon
function wounded_need_help(first_speaker, second_speaker)
	local actor = db.actor
	return actor ~= nil and not has_alife_info( "tutorial_wounded_help" )
end

--' trader needs military documents
function trader_need_military_document(first_speaker, second_speaker)
    if has_alife_info("escape_blockpost_case_done") and
	   not has_alife_info("agroprom_military_case")
	then
		return true
	end
	return false
end

--' trader dialog about docs from labx18
function actor_has_documents (actor, npc)
	if actor:object("dar_document4") then
		return true
	else
		return false
	end
end

--' Escape dynamite for Wolf
function transfer_wolf_small_reward(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "vodka", "in")
end

function transfer_wolf_reward(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_medusa", "in")
end


function transfer_wolf_reward1(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_medusa", "in")
end

function transfer_wolf_reward2(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_ameba_slime", "in")
end

function wolf_additional_reward(first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 2500, "in")
    dialogs.relocate_item_section(first_speaker, "medkit", "in")
    dialogs.relocate_item_section(first_speaker, "bandage", "in")
    dialogs.relocate_item_section(first_speaker, "grenade_f1", "in") 
    dialogs.relocate_item_section(first_speaker, "ammo_9x19_pbp", "in")
	dialogs.relocate_item_section(first_speaker, "ammo_9x19_pbp", "in")
end


--' Escape Wounded's flash
function wounded_give_flash(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "esc_wounded_flash", "in")
end

function have_wounded_flash(first_speaker, second_speaker)
  	return first_speaker:object("esc_wounded_flash") ~= nil
end
function dont_have_wounded_flash(first_speaker, second_speaker)
  	return not have_wounded_flash(first_speaker, second_speaker)
end

function give_wounded_flash(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "esc_wounded_flash", "out")
	dialogs.relocate_money(second_speaker, 2500, "in")
	dialogs.relocate_item_section(second_speaker, "medkit", "in")
	dialogs.relocate_item_section(second_speaker, "medkit", "in")
	dialogs.relocate_item_section(second_speaker, "repair_kit", "in")
	level_tasks.remove_location_by_sid(story_ids.Escape_bridge_stalkers, "green_location") -- удаляем с Петрухи метку
	level_tasks.remove_location_by_sid(story_ids.esc_bandits_factory, "green_location") -- удаляем с АТП метку
end

function give_knife_to_actor(first_speaker, second_speaker)
	if not db.actor:object("wpn_knife") then
		dialogs.relocate_item_section(first_speaker, "wpn_knife", "in")
	end
	if not db.actor:object("matras") then
		dialogs.relocate_item_section(first_speaker, "matras", "in")
	end
	if not db.actor:object("harmonica_f") then
		dialogs.relocate_item_section(first_speaker, "harmonica_f", "in")
	end
--' 	if not db.actor:object("wpn_binoc") then
--' 		dialogs.relocate_item_section(first_speaker, "wpn_binoc", "in")
--' 	end
end

--' Escape bandits factory
function give_factory_reward_trader(first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 2500, "in")
end

--' Give X-18 documents read
function give_documents_reward (first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 15000, "in")
end

--' Kill killers raid
function give_reward_killers(first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 15000, "in")
end

function fox_pay_money(actor, npc)
	dialogs.relocate_money(npc, 2500, "in")	
	treasure_manager.get_treasure_manager():give_treasure("esc_secret_truck_goods")
end

function run_tutorial_pda(first_speaker, second_speaker)
	first_speaker:stop_talk()
    second_speaker:stop_talk()
	game.start_tutorial("part_1_pda")
end

function wolf_precond_univ (actor, npc)
	return has_alife_info("esc_kill_bandits_quest_done") or (has_alife_info("tutorial_wounded_give_info") and not has_alife_info("esc_kill_bandits_quest_have"))
end

-- Функция удаления динамитного ящика из Волка
function delete_dynamite_box(actor, npc)
	local dynamite = npc:object("dynamite")
	if dynamite then
		alife():release(dynamite, true)
	end
end


-- Мирное получение Форта-15 у майора Кузнецова по заданию Сидоровича
--' Soldiers on bridge
function has_soldiers_bribe(actor, npc)
	if has_alife_info("find_af_and_vodka_for_kuzya_done") then
		return actor:money() >= 500
	else
		return actor:money() >= 1500
	end
end

function give_soldiers_bribe(actor, npc)
	if has_alife_info("find_af_and_vodka_for_kuzya_done") then
		dialogs.relocate_money(npc, 500, "out")	
	else
		dialogs.relocate_money(npc, 1500, "out")	
	end
end

-- проверка отсутствия форта-15 у гг
function actor_dont_has_fort_m1()
	if has_alife_info("find_fort_m1") then
		return db.actor:object("wpn_fort_unic") == nil
	end
end

-- проверка наличия ломтя мяса у гг
function actor_has_af()
	if db.actor:object("af_mincer_meat") ~= nil then
		db.actor:give_info_portion("esc_actor_has_af")
	end
	
	if has_alife_info("find_af_and_vodka_for_kuzya") then
		return	db.actor:object("af_mincer_meat") ~= nil
	end
end

-- проверка наличия водки у гг
function actor_has_vodka()
	if db.actor:object("vodka") ~= nil then
		db.actor:give_info_portion("esc_actor_has_vodka")
	end
	
	if has_alife_info("find_af_and_vodka_for_kuzya") then
		return	db.actor:object("vodka") ~= nil
	end
end

-- сообщение, что найден ломоть мяса
function send_message_af_mincer_meat()
	news_manager.send_tip(db.actor, "finde_af_mincer_meat", nil, nil, 6000, nil)
end

-- сообщение, что найдена водка
function send_message_vodka()
	news_manager.send_tip(db.actor, "finde_vodka", nil, nil, 6000, nil)
end

-- гг отдает ломоть мяса и водку Кузнецову
function actor_take_away_af_and_vodka(actor, npc)
	if db.actor:object("af_mincer_meat") ~= nil then
		dialogs.relocate_item_section(npc, "af_mincer_meat", "out")
	end
	
	if db.actor:object("vodka") ~= nil then
		dialogs.relocate_item_section(npc, "vodka", "out")
	end
end

-- Кузнецов отдает форт-15 гг, удаляем форт-15 из инвенторя Кузнецова
function esc_kuzia_give_away_fort_m1(actor, npc)
local npc = level_object_by_sid(032)
	dialogs.relocate_item_section(npc, "wpn_fort_unic", "in")
	ogse.remove_item_from_inventory_by_name("wpn_fort_unic", npc)
end
-- Мирное получение Форта-15 у майора Кузнецова по заданию Сидоровича