-- -*- mode: lua; coding: windows-1251-dos -*-

------Copyright DEXXX-------
-- стилистическая правка Malandrinus (26/11/2011)

local snd_obj = xr_sound.get_safe_sound_object([[$no_sound]])

function s_stop()
	if snd_obj:playing() then snd_obj:stop() end
end

local function s_play(path)
	s_stop()
	snd_obj = xr_sound.get_safe_sound_object(path)
	if snd_obj then
		snd_obj:play_at_pos(db.actor, vector():set(0, 0, 0), 0, sound_object.s2d)
	end
end

-- независимый объект для звуков выброса
--local surge_snd_obj = xr_sound.get_safe_sound_object([[$no_sound]])
-- и функция к нему
local function surge_play(path)
	--if surge_snd_obj:playing() then surge_snd_obj:stop() end
	local surge_snd_obj = xr_sound.get_safe_sound_object(path)
	if surge_snd_obj then
		surge_snd_obj:play_at_pos(db.actor, vector():set(0, 0, 0), 0, sound_object.s2d)
	end
end

function s_play_no_feedback(path, volume)
	local snd_obj = xr_sound.get_safe_sound_object(path)
	if snd_obj then
		local vlm = volume or 1.0
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector():set(0, 0, 0), vlm)
	end
end
-------------------
function hochesh_ubit()
	rnd = math.random(1, 3)
	if rnd == 1 then 
		s_play([[characters_voice\scenario\trader\trader_script1c_15]])
	elseif rnd == 2 then 
		bar_spawn.default( actor, npc )
	elseif rnd == 3 then 
		bar_spawn.default( actor, npc )
	end
end

function u_shveitsara_doljna_bit()
	rnd = math.random(1, 3)
	if rnd == 1 then 
		s_play([[characters_voice\scenario\trader\trader_script1c_14]])
	elseif  rnd == 2 then 
		bar_spawn.default( actor, npc )
	elseif rnd == 3 then 
		bar_spawn.default( actor, npc )
	end
end

function agroprom_following_krot() 	s_play([[soundtrack\agroprom_following_krot]]) end
function borov_key() 				s_play([[soundtrack\agroprom_following_krot]]) end
function agro_u_cache_enter() 		s_play([[soundtrack\agro_u_cache_enter]]) end
function agro_u_bloodsucker_meet() 	s_play([[soundtrack\agro_u_bloodsucker_meet]]) end
function agro_u_bloodsucker_meet2() s_play([[soundtrack\agro_u_bloodsucker_meet2]]) end
function darkvalley_x18_open() 		s_play([[soundtrack\darkvalley_x18_open]]) end
function x18_laugh() 				s_play([[soundtrack\x18_laugh]]) end
function x18_code1() 				s_play([[soundtrack\x18_code1]]) end
function x18_code2()  				s_play([[soundtrack\x18_code2]]) end
function rostok_gordon() 			s_play([[soundtrack\rostok_gordon]]) end
function mil_notice()  				s_play([[soundtrack\mil_notice]]) end
function mil_after_barrier() 		s_play([[soundtrack\agroprom_following_krot]]) end
------Дополнение к саундтрекам-------
function duty_warning2() 			s_play([[soundtrack\duty_warning2]]) end
------Меченый становится зомби------- 
function set_zombie() 				s_play([[soundtrack\set_zombie_1]]) end
function ti_zombie() 				s_play([[characters_voice\scenario\trader\trader_tutorial_rejection_4]]) end
function trader_kakogo() 			s_play([[soundtrack\trader_kakogo]]) end

local function play_random_from_tbl(sounds_tbl)
	s_play(sounds_tbl[math.random(#sounds_tbl)])
end
local function surge_play_random_from_tbl(sounds_tbl)
	surge_play(sounds_tbl[math.random(#sounds_tbl)])
end

local otchajanie_snds = {
	[[soundtrack\otchajanie_1]],
	[[soundtrack\otchajanie_2]],
	[[soundtrack\otchajanie_3]],
	[[soundtrack\otchajanie_4]],
}
function otchajanie()
	play_random_from_tbl(otchajanie_snds)
end

local tompson_saharov_snds = {
	[[soundtrack\saharov_1]],
	[[soundtrack\saharov_2]],
}
function tompson_saharov()
	play_random_from_tbl(tompson_saharov_snds)
end

local tompson_bbb_snds = {
	[[soundtrack\uchen_1]],
	[[soundtrack\uchen_2]],
	[[soundtrack\uchen_3]],
	[[soundtrack\uchen_4]],
}
function tompson_bbb()
	play_random_from_tbl(tompson_bbb_snds)
end

local tompson_da_snds = {
	[[soundtrack\da_1]],
	[[soundtrack\da_2]],
	[[soundtrack\da_3]],
	[[soundtrack\da_4]],
	[[soundtrack\da_5]],
}
function tompson_da()
	play_random_from_tbl(tompson_da_snds)
end

local tompson_nado_snds = {
	[[soundtrack\nado_je_1]],
	[[soundtrack\nado_je_2]],
	[[soundtrack\nado_je_3]],
	[[soundtrack\nado_je_4]],
	[[soundtrack\nado_je_5]],
}
function tompson_nado()
	play_random_from_tbl(tompson_nado_snds)
end

local monolith_die_snds = {
	[[characters_voice\human_01\monolith\fight\attack\attack_1]],
	[[characters_voice\human_01\monolith\fight\attack\attack_2]],
	[[characters_voice\human_01\monolith\fight\attack\attack_3]],
	[[characters_voice\human_01\monolith\fight\attack\attack_4]],
	[[characters_voice\human_01\monolith\fight\attack\attack_7]],
	[[characters_voice\human_01\monolith\fight\attack\attack_8]],
	[[characters_voice\human_01\monolith\fight\attack\attack_9]],
	[[characters_voice\human_01\monolith\fight\attack\attack_10]],
	[[characters_voice\human_01\monolith\fight\enemy_down\enemy_down_9]],
	[[characters_voice\human_01\monolith\fight\enemy_down\enemy_down_8]],
	[[characters_voice\human_01\monolith\fight\enemy_down\enemy_down_2]],
	[[characters_voice\human_01\monolith\fight\enemy_down\enemy_down_1]],
}
function monolith_die() 
	play_random_from_tbl(monolith_die_snds) 
end

------Рассказ о группировке Долг-------
function about_dolg_1()        s_play([[soundtrack\dolg\dolg1]]) end
function about_dolg_2()        s_play([[soundtrack\dolg\dolg2]]) end
function about_dolg_3()        s_play([[soundtrack\dolg\dolg3]]) end
function about_dolg_4()        s_play([[soundtrack\dolg\dolg4]]) end
------Псевдогиганты в тоннеле Янтаря-------
function pseudogigant() 	   s_play([[soundtrack\pseudogigant]]) end
------Убийство контроллёра на Военных складах-------
function mil_controller_dead() s_play([[soundtrack\mil_controller_dead]]) end
------Круглов просит о помощи-------
function kruglov_help() 	   s_play([[characters_voice\scenario\rostok\kruglov_help_1]]) end
function kruglov_help_2() 	   s_play([[characters_voice\scenario\rostok\kruglov_help_2]]) end
function kruglov_help_3() 	   s_play([[characters_voice\scenario\rostok\kruglov_help_3]]) end
function kruglov_help_4() 	   s_play([[characters_voice\scenario\rostok\kruglov_help_4]]) end
------Рассказ Кузнецова о своей службе-------
function kuznetsov_1() 		   s_play([[soundtrack\kuznetsov\kuznetsov_1]]) end
function kuznetsov_2() 		   s_play([[soundtrack\kuznetsov\kuznetsov_2]]) end
function kuznetsov_3() 		   s_play([[soundtrack\kuznetsov\kuznetsov_3]]) end
function kuznetsov_4() 		   s_play([[soundtrack\kuznetsov\kuznetsov_4]]) end
function kuznetsov_5() 		   s_play([[soundtrack\kuznetsov\kuznetsov_5]]) end
function kuznetsov_6() 		   s_play([[soundtrack\kuznetsov\kuznetsov_6]]) end
function kuznetsov_7() 		   s_play([[soundtrack\kuznetsov\kuznetsov_7]]) end
------Сидор отправляет за артом------
function heli_scores() 		   s_play([[characters_voice\scenario\escape\heli_kills_group]]) end
------Сидор отправляет спасать Толика------
function sidor_go_help() 	   s_play([[characters_voice\dialogs\trader_tutorial_go_help_tolik_1]]) end
function sidor_go_help_alt()   s_play([[characters_voice\dialogs\trader_tutorial_go_help_tolik_2]]) end
function heli_attacks() 	   s_play([[characters_voice\scenario\darkscape\heli_spot]]) end
function heli_let_it_be() 	   s_play([[characters_voice\scenario\escape\heli_radio_part_1]]) end
------Волк приглашает в деревню------
function wolf_to_dialog() 	   s_play([[characters_voice\scenario\escape\wolf_to_dialog]]) end
------Лис просит о помощи-------
function dogs_fox() 		   s_play([[soundtrack\dogs_fox]]) end
------Звуки в подземных локациях, в основном при открывании дверей и при включении (выключении механизмов)-------
local underground_snds = {
	[[soundtrack\underground\underground_1]],
	[[soundtrack\underground\underground_2]],
	[[soundtrack\underground\underground_3]],
	[[soundtrack\underground\underground_4]],
	[[soundtrack\underground\underground_5]],
	[[soundtrack\underground\underground_6]],
}
function underground()
	play_random_from_tbl(underground_snds)
end
------Ненавязчивые амбиентные звуки для сюжета-------
local occusion_snds = {}
for i=1,10 do
	table.insert(occusion_snds, [[soundtrack\occusion\occusion_]]..i)
end
function occusion()
	play_random_from_tbl(occusion_snds)
end
------Звуки перед началом выброса-------
local preblow_snds = {
	[[ambient\blowout\blowout_begin]],
	[[ambient\blowout\blowout_begin_02]],
}
function preblow()
	surge_play_random_from_tbl(preblow_snds)
end

function attention_everyone() surge_play([[ambient\blowout\blowout_siren]]) end
function surge_begin() 		  surge_play([[ambient\blowout\blowout_rumble]]) end
function surge_wave_1() 	  surge_play([[ambient\blowout\blowout_wave_01]]) end
function surge_wave_2() 	  surge_play([[ambient\blowout\blowout_wave_02_short]]) end
local surge_wave_3_snds = {
	[[ambient\blowout\blowout_wave_03]],
	[[ambient\blowout\blowout_wave_03_short]],
}
function surge_wave_3()
	surge_play_random_from_tbl(surge_wave_3_snds)
end
function surge_wave_4() surge_play([[ambient\blowout\blowout_wave_04]]) end
function surge_rumble() surge_play([[ambient\blowout\blowout_rumble]]) end
function surge_outro()  surge_play([[ambient\blowout\blowout_outro]]) end

-- Проигрыш звуков осыпей
local rock_sound_snds = {
	[[ambient\rnd_outdoor\rnd_obval]],
	[[ambient\rnd_outdoor\rnd_rock1]],
	[[ambient\rnd_outdoor\rnd_rock2]],
	[[ambient\rnd_outdoor\rnd_rock3]],
}
function rock_sound()
	surge_play_random_from_tbl(rock_sound_snds)
end
-- Проигрыш эмбиента
local ambient_snds = {
	[[ambient\rt_ambient1]],
	[[ambient\rt_ambient2]],
	[[ambient\rt_dark_indoor_amb1]],
	[[ambient\rt_eerie_wind1]],
	[[ambient\sfx_amb_wind_tat_a_loop]],
}
function play_ambient()
	surge_play_random_from_tbl(ambient_snds)
end

-- Проигрыш звуков, сигналов, шумов Выброса
local surge_sound_snds = {
	[[anomaly\dezodor]],
	[[anomaly\dezodor1]],
	[[anomaly\dezodor2]],
	[[anomaly\dezodor3]],
	[[anomaly\dezodor4]],
}
function surge_sound()
	surge_play_random_from_tbl(surge_sound_snds)
end

-- Проигрыш странных звуков
local strange_sounds_snds_left = {
	[[ambient\rnd_outdoor\rnd_dark4]],
	[[ambient\rnd_outdoor\rnd_moan1]],
	[[ambient\rnd_outdoor\rnd_moan2]],
	[[ambient\rnd_outdoor\rnd_dark6]],
}
local strange_sounds_snds_right = {
	[[ambient\rnd_outdoor\rnd_dark4]],
	[[ambient\rnd_outdoor\rnd_moan1]],
	[[ambient\rnd_outdoor\rnd_moan1]],
	[[ambient\rnd_outdoor\rnd_dark6]],
}

local sound_obj_left = xr_sound.get_safe_sound_object([[$no_sound]])
local sound_obj_right = xr_sound.get_safe_sound_object([[$no_sound]])

local function get_random_sound(sounds_names)
	return sound_object(sounds_names[math.random(1,#sounds_names)])
end

function strange_sounds()
	if not sound_obj_left:playing() then 
		sound_obj_left = get_random_sound(strange_sounds_snds_left)
		sound_obj_left:play_at_pos (db.actor, vector():set(1, 0, 1), 0, sound_object.s2d) 
		sound_obj_left.volume = 0.5
	end
	if not sound_obj_right:playing() then 
		sound_obj_right = get_random_sound(strange_sounds_snds_right)
		sound_obj_right:play_at_pos (db.actor, vector():set(-1, 0, 1), 0, sound_object.s2d) 
		sound_obj_right.volume = 0.5
	end
end

-- ещё звуки для выброса
function earthquake_sound() 	surge_play([[ambient\earthquake]]) end
function actor_breath_sound() 	surge_play([[actor\breath_1]]) end



function dobrogo_puti()               s_play([[characters_voice\dialogs\dobrogo_puti]])  end
function lesop_bandits_signal()       s_play([[characters_voice\dialogs\lesop_bandits_signal]]) end
function lesop_iskatel_signal_1()     s_play([[characters_voice\dialogs\lesop_iskatel_signal_1]]) end
function lesop_iskatel_signal_2()     s_play([[characters_voice\dialogs\lesop_iskatel_signal_2]]) end
function vsosali()                    s_play([[characters_voice\dialogs\vsosali]]) end
function kulg_band_bar_ambush()       s_play([[characters_voice\human_01\bandit\fight\tolls\tolls_2]]) end
function klondayk_quest_start()       s_play([[characters_voice\scenario\klondayk_quest_start]]) end
function secret_villager_ston_1()     s_play([[characters_voice\scenario\secret_villager_ston_1]]) end
function secret_villager_ston_2()     s_play([[characters_voice\scenario\secret_villager_ston_2]]) end
function secret_villager_birth()      s_play([[characters_voice\scenario\secret_villager_birth]]) end
function kubik()                      s_play([[characters_voice\scenario\kubik]]) end


local proigrish_snds = {
	[[characters_voice\human_01\stalker\reactions\story\laughter_1]],
	[[characters_voice\human_01\stalker\reactions\story\laughter_2]],
	[[characters_voice\human_01\stalker\reactions\story\laughter_3]],
	[[characters_voice\human_01\stalker\reactions\story\laughter_4]],
	[[characters_voice\human_01\stalker\reactions\story\laughter_5]],
	[[characters_voice\human_01\stalker\reactions\story\laughter_6]],
}
function proigrish()
	play_random_from_tbl(proigrish_snds)
end


local viigrish_snds = {
	[[characters_voice\human_01\stalker\states\idle\idle_14]],
	[[characters_voice\human_01\stalker\states\idle\idle_15]],
	[[characters_voice\human_01\stalker\states\idle\idle_21]],
	[[characters_voice\human_01\stalker\states\idle\idle_28]],
	[[characters_voice\human_01\stalker\states\idle\idle_29]],
	[[characters_voice\human_01\stalker\states\idle\idle_28]],
}
function viigrish()
	play_random_from_tbl(viigrish_snds)
end


function visit_teleport_base()                 s_play([[anomaly\emi_entrance]]) end
function visit_secret_portal_1_plita()         s_play([[anomaly\anomaly_gravy_hit]]) end
function visit_secret_portal_2_constructions() s_play([[anomaly\electra_blast]]) end
function visit_secret_portal_3_kust()          s_play([[anomaly\anomaly_gravy_blast]]) end
function visit_secret_portal_4_serp()          s_play([[anomaly\gravity_entrance]]) end
function af_puzir_destroy()                    s_play([[material\glass\glass_fall02hl]]) end
function rad_company_signal()                  s_play([[characters_voice\scenario\request_help_vs_mutant]]) end
function mikluha_thanks_tip()                  s_play([[characters_voice\scenario\mikluha_thanks_tip]]) end
function dolg_pred_message_1()                 s_play([[characters_voice\scenario\dolg_pred_message_1]]) end
function dolg_pred_message_2()                 s_play([[characters_voice\scenario\dolg_pred_message_2]]) end
function actors_hit()                          s_play([[affects\hit_fist]]) end
function merc_signal_btr()                     s_play([[characters_voice\scenario\pri\followers_btr_phrase1_1]]) end
function uaz_spawn_desant()                    s_play([[characters_voice\scenario\pri\followers_kill6]]) end
function dar_officer_spawn()                   s_play([[characters_voice\scenario\dar_officer_spawn_tip]]) end
function mercs_press_button()                  s_play([[characters_voice\scenario\mercs_press_button]]) end
function merc_signal_uaz()                     s_play([[characters_voice\scenario\merc_signal_uaz]]) end
function military_radio_request1()             s_play([[characters_voice\scenario\military_radio_request1]]) end
function military_radio_request2()             s_play([[characters_voice\scenario\military_radio_request2]]) end
function merc_signal_kill_btr()                s_play([[characters_voice\scenario\pri\followers_btr_phrase2_3]]) end
function shelest_open()                        s_play([[characters_voice\scenario\shelest_1]]) end
function shelest_close()                       s_play([[characters_voice\scenario\shelest_3]]) end

local shelest_switch_snds = {
	[[characters_voice\scenario\shelest_2]],
	[[characters_voice\scenario\shelest_3]],
}
function shelest_switch()
	play_random_from_tbl(shelest_switch_snds)
end

function fitilek() s_play([[characters_voice\dialogs\bridge_lekar_start_dialog_phrase_15]]) end
function af_uley_packed() s_play([[device\metal_small_close_stop]]) end

local pain1_snds = {
	[[actor\die0]],
	[[actor\die1]],
}
function pain1()
	play_random_from_tbl(pain1_snds)
end
local pain2_snds = {
	[[actor\die2]],
	[[actor\die3]],
}
function pain2()
	play_random_from_tbl(pain2_snds)
end
local kashel1_snds = {
	[[characters_voice\human_01\stalker\states\idle\idle_32]],
	[[characters_voice\human_01\stalker\states\idle\idle_33]],
}
function kashel1()
	play_random_from_tbl(kashel1_snds)
end

local kashel2_snds = {
	[[characters_voice\human_01\killer\states\idle\idle_27]],
	[[characters_voice\human_01\military\states\idle\idle_26]],
}
function kashel2()
	play_random_from_tbl(kashel2_snds)
end

function safebutton_press()         s_play([[characters_voice\scenario\safe_button_press]]) end
function safe_door_still_closed()   s_play([[device\door_locked]]) end
function safe_door_opened()         s_play([[device\metal_small_close_start]]) end
function ds_zapravka_port_signal1() s_play([[characters_voice\scenario\ds_zapravka_signal1]]) end
function ds_zapravka_port_signal2() s_play([[characters_voice\scenario\ds_zapravka_signal2]]) end
function ds_zapravka_port_action()  s_play([[anomaly\anomaly_gravy_blast00]]) end
function af_mayatnik_travel()       s_play([[anomaly\teleport_incoming]]) end
function ds_dolg_zapravka_signal()  s_play([[characters_voice\scenario\ds_dolg_zapravka_signal]]) end
function pkm_activate()             s_play([[weapons\pkm\pkm_reload]]) end
function pkm_deactivate()           s_play([[scripts\remkit\ui_repairweapon_07]]) end
function towerbox_btn_press()       s_play([[characters_voice\scenario\afscanner_off]]) end
function kordon_samogon_drink()     s_play([[inv_sounds\inv_vodka]]) end
function cheb_open()                s_play([[ambient\random\rnd_ratchant]]) end

function safe_click()               s_play([[device\safe_click]]) end
function safe_opening()             s_play([[device\safe_opening]]) end
function wood_large_open()          s_play([[device\wood_large_open]]) end
function metal_small_close_stop()   s_play([[device\\metal_small_close_stop]]) end


local cheb_talking_snds = {
	[[monsters\tushkano\tushkano_idle_0]],
	[[monsters\tushkano\tushkano_idle_1]],
	[[monsters\tushkano\tushkano_idle_2]],
	[[monsters\tushkano\tushkano_idle_3]],
}
function cheb_talking() 
	play_random_from_tbl(cheb_talking_snds)
end

function cheb_dead()                   s_play([[characters_voice\scenario\cheb_dead]]) end
function afscanner_click()             s_play([[detectors\contact_8]]) end
function afscanner_click2()            s_play([[device\decoder]]) end
function afscanner_click3()            s_play([[device\pda\pda_sos]]) end
function afscanner_off()               s_play([[characters_voice\scenario\afscanner_off]]) end
function new_art_birth()               s_play([[characters_voice\multiplayer\automatic\artefact_new]]) end
function kommander_box_open()          s_play([[device\metal_small_close_start]]) end
function diplomat_open()               s_play([[device\wood_small_close_stop]]) end
function svd_shot()                    s_play([[weapons\svd\svd_shoot]]) end
function cheb_fakeart_konteiner_open() s_play([[device\wood_small_close_stop]]) end
function magnit_portal()               s_play([[anomaly\teleport_work_1]]) end
function vodka_drink()                 s_play([[inv_sounds\inv_vodka]]) end
function city_btr_crashed_use()        s_play([[car\trabantnoise]]) end
function break_crowbar()               s_play([[ambient\x18\x18_creak_1]]) end
function keys()                        s_play([[characters_voice\scenario\keys]]) end
function cit_tow_box_open()            s_play([[ambient\x18\h_or_metal_large]]) end
function cit_tow_box_dont_open()       s_play([[ambient\x18\h_tal_grate_impact_hard2]]) end
function play_strike()				   s_play([[weapons\knife\knife_kick_1]]) end


function ds_glavar_hello()				s_play([[script_sound\talk\abuse\soldier\soldier_abuse_11]]) end
function ds_glavar_speech1()			s_play([[script_replics\stalker_1\talk\stalker_talk_9]]) end
function ds_glavar_getlost()			s_play([[script_replics\stalker_1\talk\stalker_talk_24]]) end

function head_pain()				s_play([[characters_voice\scenario\bar\psycho\psycho_talks_1]]) end



local actor_no_snds = {
	[[characters_voice\scenario\actor_no_1]],
	[[characters_voice\scenario\actor_no_2]],
	[[characters_voice\scenario\actor_no_3]],
}
function actor_no() 
	play_random_from_tbl(actor_no_snds)
end


function dar_samogon_snd()				s_play([[characters_voice\scenario\dar_samogon_snd]]) end
function kulgband_klondike_fail_snd()				s_play([[characters_voice\scenario\cit_kulgband_task_fail]]) end








