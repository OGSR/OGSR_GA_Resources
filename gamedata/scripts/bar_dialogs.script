

function pivo(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker,"pivo", "in")
end
--Принести Тактический Вал Пличко
function bar_dolg_propusk_have(task, objective)
	if db.actor ~= nil then 
		return db.actor:object("wpn_val_tact") ~= nil
	end
return false
end

-- Проверено! Пличко отбирает арбалет. FAR93 11.03.11
function bar_dolg_propusk_done(first_speaker, second_speaker) 
	dialogs.relocate_item_section(second_speaker, "wpn_val_tact", "out")
	second_speaker:set_relation(game_object.friend, first_speaker) 
end



--Взнос Долгу для прохода на территорию
function has_dolg_deposite(actor, npc)
	return actor:money() >= 1000
end

function give_dolg_deposite(actor, npc)	
	dialogs.relocate_money(npc, 1000, "out")
end

--Бармен в комнате
function give_agroprom_documents(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "quest_case_02", "out")
end

function give_agroprom_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 25000, "in")
end

function give_extra_task(actor, npc)
	if barman_darklab_documents_given(actor,npc) or
	   barman_x16_given(actor,npc) or
	   has_alife_info("bar_deactivate_radar_start")
	then
		return true
	end
	return false
end
function dont_give_extra_task(actor, npc)
	return not give_extra_task(actor, npc)
end

function barman_dont_has_room_job(actor,npc)
	return not barman_has_room_job(actor,npc)
end
function barman_has_room_job(actor,npc)	
	if barman_need_darklab_documents(actor,npc)
	then
		return true
	end
	return false
end

function barman_need_complete_job(actor,npc)
	if barman_darklab_documents_given(actor,npc) and 
	   have_darklab_documents(actor,npc)
	then
		return true
	end
	return false
end

function barman_dont_has_job(actor,npc)
	return not barman_has_job(actor,npc)
end

function barman_has_job(actor,npc)
	if has_alife_info("bar_darklab_document_done") and
	   barman_need_kill_veterans(actor,npc) and has_alife_info("bar_rescue_research_start")
	then
		return true
	end
	return false
end



-- ********************************************************
--			БАРМЕН В КОМНАТЕ
-- ********************************************************
-- Документы с дарклаба
function barman_need_darklab_documents(actor,npc)
	if not has_alife_info("bar_darklab_document_start")
	then
		return true
	end
	return false
end

function barman_darklab_documents_given(actor,npc)
	if has_alife_info("bar_darklab_document_start") and
	   not has_alife_info("bar_darklab_document_done") 
	then
		return true
	end
	return false
end

-- DotPack

function have_darklab_documents(first_speaker, second_speaker)
  	return first_speaker:object("dar_document1") ~= nil and
		first_speaker:object("dar_document2") ~= nil and
		first_speaker:object("dar_document3") ~= nil and
		first_speaker:object("dar_document4") ~= nil and
		first_speaker:object("dar_document5") ~= nil
end

function hasnt_darklab_documents(first_speaker, second_speaker)
  	return first_speaker:object("dar_document1") == nil or
		first_speaker:object("dar_document2") == nil or
		first_speaker:object("dar_document3") == nil or
		first_speaker:object("dar_document4") == nil or
		first_speaker:object("dar_document5") == nil
end

function give_darklab_documents(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "dar_document1", "out")
	dialogs.relocate_item_section(second_speaker, "dar_document2", "out")
	dialogs.relocate_item_section(second_speaker, "dar_document3", "out")
	dialogs.relocate_item_section(second_speaker, "dar_document4", "out")
	dialogs.relocate_item_section(second_speaker, "dar_document5", "out")
end

-- DotPack

function give_darklab_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 30000, "in")
--	dialogs.relocate_item_section(second_speaker, "wpn_val", "in")
--	dialogs.relocate_item_section(second_speaker, "ammo_7.62x54_ap", "in")
--	dialogs.relocate_item_section(second_speaker, "ammo_7.62x54_ap", "in")
end

-- Документы с Янтаря
function barman_x16_given(actor,npc)
	if has_alife_info("bar_x16_documents_start") and
	   not has_alife_info("bar_x16_documents_done")
	then
		return true
	end
	return false
end

-- Документы из янтаря
function have_x16_documents(first_speaker, second_speaker)
  	return first_speaker:object("lab_x16_documents") ~= nil
end
function give_x16_documents(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "lab_x16_documents", "out")
end
function give_x16_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 14000, "in")
end

-- Выдача задания на отключение радара
function barman_need_radar(actor,npc)
	if has_alife_info("bar_deactivate_radar_start")	then
		return true
	end
	return false
end

-- ********************************************************
--			БАРМЕН ЗА ПРИЛАВКОМ
-- ********************************************************
--Долг архивные документы
function have_dolg_arhive_document(first_speaker, second_speaker)
  	return first_speaker:object("dolg_arhive_documents") ~= nil
end

function give_dolg_arhive_document(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "dolg_arhive_documents", "out")
end
-- Флешка ученных с ростка
function actor_have_research(first_speaker, second_speaker)
  	return first_speaker:object("bar_ecolog_flash") ~= nil
end
function actor_transfer_research(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "bar_ecolog_flash", "out")
	if has_alife_info("bar_rescue_research_reward") then
        dialogs.relocate_money(second_speaker, 7000, "in")
    end
end


-- ********************************************************
--			Лидер Долга
-- ********************************************************
--Свобода РГ-6
function have_rg6(first_speaker, second_speaker)
  	return first_speaker:object("mil_m202") ~= nil
end

function dont_have_rg6(first_speaker, second_speaker)
  	return first_speaker:object("mil_m202") == nil or not has_alife_info("mil_svoboda_rg6_gain")
end


function give_rg6(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "mil_m202", "out")
end

function enter_to_dolg(first_speaker, second_speaker)
--	dialogs.relocate_item_section(second_speaker, "dolg_outfit", "in")
	dialogs.relocate_money(second_speaker, 15000, "in")
end

--Фамильное ружье охотника
function have_hunters_toz(first_speaker, second_speaker)
  	return first_speaker:object("hunters_toz") ~= nil
end
function give_hunters_toz(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "hunters_toz", "out")
end
function have_hunter_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 7500, "in")
end


-- Оплата информации осведомителю.
function has_money_for_informer_1(actor, npc)
	return actor:money() >= 4000
end

function give_money_for_informer_1(actor, npc)
	dialogs.relocate_money(npc, 4000, "out")
end

function has_money_for_informer_2(actor, npc)
	return actor:money() >= 5000
end

function give_money_for_informer_2(actor, npc)	
	dialogs.relocate_money(npc, 5000, "out")
end

function has_money_for_informer_3(actor, npc)
	return actor:money() >= 5500
end

function give_money_for_informer_3(actor, npc)	
	dialogs.relocate_money(npc, 5500, "out")
end

function has_money_for_informer_4(actor, npc)
	return actor:money() >= 50000
end

function give_money_for_informer_4(actor, npc)	
	dialogs.relocate_money(npc, 50000, "out")
end

function give_lab_hint_informer()
	if not has_alife_info("dar_password_info1") then
		db.actor:give_info_portion("dar_password_info1")
	end
	if not has_alife_info("dar_password_info2") then
		db.actor:give_info_portion("dar_password_info2")
	end
end

function barman_give_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "stalker_outfit", "in")
end


function professor_for_resque(npc, actor)
    if not has_alife_info("rostok_kruglov_give_flash") then
	    dialogs.relocate_item_section(npc, "bar_ecolog_flash", "in")
        db.actor:give_info_portion("rostok_kruglov_give_flash")
    end
end

-- ********************************************************
--			ARENA
-- ********************************************************

function arena_give_reward(actor, npc)
	local m = 0
	if has_alife_info("bar_arena_fight_1_reward") then
		m = 1000
	elseif has_alife_info("bar_arena_fight_2_reward") then
		m = 2000
	elseif has_alife_info("bar_arena_fight_3_reward") then
		m = 3000
	elseif has_alife_info("bar_arena_fight_4_reward") then
		m = 4000
	elseif has_alife_info("bar_arena_fight_5_reward") then
		m = 6000
	elseif has_alife_info("bar_arena_fight_6_reward") then
		m = 8000
	elseif has_alife_info("bar_arena_fight_7_reward") then
		m = 10000   
	elseif has_alife_info("bar_arena_fight_8_reward") then
		m = 10000
	end
	dialogs.relocate_money(npc, m, "in")
	db.actor:give_info_portion("bar_arena_reset")	
	xr_zones.purge_arena_items("bar_arena")
end


function actor_has_1000(actor,npc)
	return actor:money() > 1000
end
function give_money_1000(actor, npc)	
	dialogs.relocate_money(npc, 1000, "out")
end
function actor_has_2000(actor,npc)
	return actor:money() > 2000
end
function give_money_2000(actor, npc)	
	dialogs.relocate_money(npc, 2000, "out")
end
function actor_has_3000(actor,npc)
	return actor:money() > 3000
end
function give_money_3000(actor, npc)	
	dialogs.relocate_money(npc, 3000, "out")
end
function actor_has_5000(actor,npc)
	return actor:money() > 5000
end
function give_money_5000(actor, npc)	
	dialogs.relocate_money(npc, 5000, "out")
end

-- new arena

function arena_has_reward ()
	return has_alife_info("bar_arena_fight_1_reward") or has_alife_info("bar_arena_fight_2_reward") or has_alife_info("bar_arena_fight_3_reward") or has_alife_info("bar_arena_fight_4_reward") or has_alife_info("bar_arena_fight_5_reward") or has_alife_info("bar_arena_fight_6_reward") or has_alife_info("bar_arena_fight_7_reward") or has_alife_info("bar_arena_fight_8_reward")
end

function arena_hasnt_reward ()
	return not( has_alife_info("bar_arena_fight_1_reward") or has_alife_info("bar_arena_fight_2_reward") or has_alife_info("bar_arena_fight_3_reward") or has_alife_info("bar_arena_fight_4_reward") or has_alife_info("bar_arena_fight_5_reward") or has_alife_info("bar_arena_fight_6_reward") or has_alife_info("bar_arena_fight_7_reward") or has_alife_info("bar_arena_fight_8_reward"))
end

function arena_rank_check_true ()
	if has_alife_info("bar_arena_fight_6_done") or has_alife_info("bar_arena_fight_3_done") then
		if has_alife_info("bar_arena_fight_3_done") and (db.actor:character_rank() > 300) and not(has_alife_info("bar_arena_fight_6_done")) then
			return true
		end
	elseif has_alife_info("bar_arena_fight_6_done") and (db.actor:character_rank() > 600) then
		return true 	
	else 
		return false
	end
end

function arena_rank_check_false ()
	return not arena_rank_check_true ()
end

-- Отметка интересных мест на карте
function locate_bar_bar(actor,npc)
	level_tasks.add_location_by_sid(story_ids.bar_bar_locator, "crlc_small", "bar_bar_locator")
end
function locate_bar_arena(actor,npc)
	level_tasks.add_location_by_sid(story_ids.bar_arena_locator, "crlc_small", "bar_arena_locator")
end
-- Киценко ставит метку на базу Долга, а не на Воронина 
function locate_bar_dolg(actor,npc)
	local obj = alife():story_object(story_ids.bar_Barman) --barman
	if npc:id() == obj.id then
		level_tasks.add_location_by_sid(story_ids.bar_dolg_general_voronin, "green_location", "bar_voronin_name")
	else -- must be Kitsenko
		level_tasks.add_location_by_sid(story_ids.bar_dolg_locator, "crlc_small", "bar_dolg_locator")
	end
end