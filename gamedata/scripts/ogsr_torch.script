

function attach( sm )
  sm:subscribe({ signal = "on_first_update", fun = this.set_torch_mode })
  sm:subscribe({ signal = "on_key_down",     fun = this.on_key_down    })
end



local torch_mode = "off"
function set_torch_mode( k )
  if db.actor:alive() then
    local torch = db.actor:item_in_slot( 9 )
    if torch and torch:is_torch() then
      torch = get_torch_obj( torch )
      if torch.on then
        torch_mode = ogse.load_var( "ogse_torch.torch_mode", "near" )
        if torch_mode == "far" then
          set_far_mode( torch, k )
        elseif torch_mode == "near" then
          set_near_mode( torch, k )
        end
      else
        set_near_mode( torch, k )
        torch_mode = "off"
      end
    end
  end
end


function on_key_down(key, bind ) --Действие при нажатии клавиши фонаря
	if ( bind ~= key_bindings.kTORCH )
	or level.main_input_receiver()
then 
return 
end
  if db.actor:alive() then
    local torch = db.actor:item_in_slot( 9 )
    if torch and torch:is_torch() then
      local snd = sound_object( "device\\bad_box" )
      snd:play( db.actor, 0, sound_object.s2d )
      torch = get_torch_obj( torch )
      if torch.on then
        if torch_mode == "near" then
          set_far_mode( torch )
        torch:switch( true )
        else
          torch_mode = "off"
        end
        torch:switch( true )
      else
        set_near_mode( torch )
        torch:switch( true )
      end
        torch:switch( true )
      ogse.save_var( "ogse_torch.torch_mode", torch_mode )
    end
  end
end


function set_near_mode( torch, r )

  torch_mode = "near"
  torch:set_range( 20 )
  torch:set_angle( math.rad( 110 ) )

end


function set_far_mode( torch, r )
 
 torch_mode = "far"
  torch:set_range( 60 )
  torch:set_angle( math.rad( 60 ) )

end


function is_torch_enabled()
  if db.actor:alive() then
    local torch = db.actor:item_in_slot( 9 )
    if torch and torch:is_torch() then
      torch = get_torch_obj( torch )
      return torch.on
    end
  end
end


function play_click()
  snd_obj = xr_sound.get_safe_sound_object( [[device\bad_box]] )
  if snd_obj then
    snd_obj:play_no_feedback( db.actor, sound_object.s2d, 0, vector():set( 0, 0, 0 ), 1.0 )
  end
end
