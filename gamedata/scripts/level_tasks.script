-- -*- mode: lua; coding: windows-1251-dos -*-

local level_scripts = {
	escape_tasks,
	garbage_tasks,
	agroprom_tasks,
	darkvalley_tasks,
	bar_rostok_tasks,
    --yantar_tasks,
    mil_tasks,
	radar_tasks,
	pripyat_tasks,
}

function proceed()
	if db.actor == nil then
		return
	end
	for k, v in pairs( level_scripts ) do
		v.proceed()
	end
end

function process_info_portion(info_id)
	if db.actor == nil then
		return
	end
	for k, v in pairs( level_scripts ) do
		if v.process_info_portion(info_id) then
			return
		end
	end
end

function add_location_by_sid(sid, location, hint)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
			add_location_internal(obj.id, location, hint)
		end
	end
end

function add_location_by_id(id, location, hint)
	local sim = alife()
	if sim then
		local obj = sim:object(id)
		if obj then
			add_location_internal(id, location, hint)
		end
	end
end

function add_location_internal(id, location, hint)
	if hint then
		level.map_add_object_spot_ser(id, location, hint)
	else
		level.map_add_object_spot_ser(id, location, "")
	end
end

function remove_location_by_id(id, location, single)
	local sim = alife()
	if sim then
		local obj = sim:object(id)
		if obj then
			level.map_remove_object_spot(id, location)
			if not single then
				for a = 1, level.map_has_object_spot(id, location), 1 do
				   level.map_remove_object_spot(id, location)
				end	
			end
		end
	end
end

function remove_location_by_sid(sid, location, single)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
			level.map_remove_object_spot(obj.id, location)
			if not single then
				for a = 1, level.map_has_object_spot(obj.id, location), 1 do
				   level.map_remove_object_spot(obj.id, location)
				end	
			end
		end
	end
end

function is_map_spot_present(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) ~= 0 then
		   return true
		end
	end
	return false
end

function is_map_spot_present_by_id(id, location)
	return level.map_has_object_spot(id, location) ~= 0
end

function set_task_state(id_state, id_task, id_subtask)
	if db.actor then
		db.actor:set_task_state(id_state, id_task, id_subtask)
	end
end

function notify_new_task()
end
