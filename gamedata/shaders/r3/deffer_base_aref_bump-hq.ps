#include "common.h"
#include "sload.h"
#include "common_brdf.h"

// SSS Settings
#include "settings_screenspace_FLORA.h"

f_deffer main(p_bumped I)
{
    f_deffer O;

    surface_bumped S = sload(I);

    calc_alpha_test(I.tcdh.xy, S.base.a);

    // FLORA FIXES & IMPROVEMENTS - SSS Update 18
    // https://www.moddb.com/mods/stalker-anomaly/addons/screen-space-shaders/
    S.normal.xy += float2(.02f, .02f);
    S.normal.xy *= max(5.0f * rain_params.y, 3.0f);

    // FLORA FIXES & IMPROVEMENTS - SSS Update 14
    // https://www.moddb.com/mods/stalker-anomaly/addons/screen-space-shaders/
    // Normal from texture and force Y vector to generate a nice fake SSS and specular
    // Sun works extremly well with this fake normal, but point lights and others need a fix later on 'accum_base.ps' and 'accum_omni_unshadowed.ps'
    float3 Ne = mul(m_WV, (float3(S.normal.x, 1.0f, S.normal.y)));
    Ne = normalize(Ne);

    // Material value ( MAT_FLORA )
    float ms = MAT_FLORA;

    // Gloss
    S.gloss = lerp(ssfx_florafixes_1.z, ssfx_florafixes_1.w, rain_params.y);
    // -----------------------------------------------------------------------

#ifdef USE_LM_HEMI
    //  float4 lm = tex2D(s_hemi, I.lmh);
    float4 lm = s_hemi.Sample(smp_rtlinear, I.lmh);
    // float h = dot(lm.rgb,1.h/3.h);
    float h = get_hemi(lm);
#ifdef USE_R2_STATIC_SUN
    //          ms = lm.w;
    ms = get_sun(lm);
#endif
#else
    float h = I.position.w;
#ifdef USE_R2_STATIC_SUN
    ms = I.tcdh.w;
#endif
#endif

    O = pack_gbuffer(float4(Ne, h), float4(I.position.xyz + Ne * S.height * def_virtualh, ms), float4(S.base.rgb, S.gloss));

    O.Velocity = get_motion_vector(I.hpos_curr, I.hpos_old);

    return O;
}
